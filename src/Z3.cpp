#include <math.h>

#include "../include/Z3.hpp"
#include "../include/special.hpp"
#include <iostream>

const int SIGMAS[2] = { -1, 1 };

// =======================================================================================

double cF3_norm_symmetrical(double h_i, double h_j, double l_ij, double l_ik) {
    double result = 0;
    for (int is1 = 0; is1 < 2; is1++)
        for (int is2 = 0; is2 < 2; is2++)
            for (int is3 = 0; is3 < 2; is3++) {
                int s1 = SIGMAS[is1];
                int s2 = SIGMAS[is2];
                int s3 = SIGMAS[is3];

                double arg_exp = (s3 - 1) * h_j + (s1 * s2 - 1) * l_ik + (s1 + s2) * (h_i + s3 * l_ij) - 2 * (h_i + l_ij);
                double arg1    = (h_i + s3 * l_ij + (s1 + s2) * h_i / h_j * l_ij) / sqrt(2 * h_i / h_j * l_ij);
                double arg2    = sqrt(h_i / h_j * l_ij / l_ik);
                double arg3    = (s1 + s2) / sqrt(2 * l_ik) * (l_ik - h_i / h_j * l_ij);
                result += s1 * s2 * s3 * exp(arg_exp) * F3(arg1, arg2, arg3);
            }

    return result;
}

double cF3_symmetrical(double h_i, double h_j, double l_ij, double l_ik) {
    return cF3_norm_symmetrical(h_i, h_j, l_ij, l_ik) * exp(h_j + l_ik + 2 * (h_i + l_ij));
}

double E_norm_symmetrical(double h_i, double h_j, double l_ij, double l_ik, bool arg_s1, bool arg_s2, bool arg_s3) {
    double result = 0;
    for (int is1 = 0; is1 < 2; is1++)
        for (int is2 = 0; is2 < 2; is2++)
            for (int is3 = 0; is3 < 2; is3++) {
                int s1 = SIGMAS[is1];
                int s2 = SIGMAS[is2];
                int s3 = SIGMAS[is3];

                int factor = 1;
                factor *= arg_s1 ? s1 : 1;
                factor *= arg_s2 ? s2 : 1;
                factor *= arg_s3 ? s3 : 1;

                double arg_exp = (s3 - 1) * h_j + (s1 * s2 - 1) * l_ik + (s1 + s2) * (h_i + s3 * l_ij) - 2 * (h_i + l_ij);
                result += factor * exp(arg_exp);
            }

    return result;
}

double E_symmetrical(double h_i, double h_j, double l_ij, double l_ik, bool arg_s1, bool arg_s2, bool arg_s3) {
    return E_norm_symmetrical(h_i, h_j, l_ij, l_ik, arg_s1, arg_s2, arg_s3) * exp(h_j + l_ik + 2 * (h_i + l_ij));
}

double FTilde_norm_symmetrical(double h_i, double h_j, double l_ij, double l_ik, bool arg_s1, bool arg_s2, bool arg_s3) {
    double result = 0;
    for (int is1 = 0; is1 < 2; is1++)
        for (int is2 = 0; is2 < 2; is2++)
            for (int is3 = 0; is3 < 2; is3++) {
                int s1 = SIGMAS[is1];
                int s2 = SIGMAS[is2];
                int s3 = SIGMAS[is3];

                int factor = 1;
                factor *= arg_s1 ? s1 : 1;
                factor *= arg_s2 ? s2 : 1;
                factor *= arg_s3 ? s3 : 1;

                double arg_exp    = (s3 - 1) * h_j + (s1 * s2 - 1) * l_ik + (s1 + s2) * (h_i + s3 * l_ij) - 2 * (h_i + l_ij);
                double arg_dawson = (h_i + s3 * l_ij + (s1 + s2) * l_ik) / sqrt(2 * l_ik);
                result += factor * exp(arg_exp) * dawson(arg_dawson);
            }

    return result;
}

double FTilde_symmetrical(double h_i, double h_j, double l_ij, double l_ik, bool arg_s1, bool arg_s2, bool arg_s3) {
    return FTilde_norm_symmetrical(h_i, h_j, l_ij, l_ik, arg_s1, arg_s2, arg_s3) * exp(h_j + l_ik + 2 * (h_i + l_ij));
}

double F_norm_symmetrical(double h_i, double h_j, double l_ij, double l_ik, bool arg_s1, bool arg_s2, bool arg_s3) {
    double result = 0;
    for (int is1 = 0; is1 < 2; is1++)
        for (int is2 = 0; is2 < 2; is2++)
            for (int is3 = 0; is3 < 2; is3++) {
                int s1 = SIGMAS[is1];
                int s2 = SIGMAS[is2];
                int s3 = SIGMAS[is3];

                int factor = 1;
                factor *= arg_s1 ? s1 : 1;
                factor *= arg_s2 ? s2 : 1;
                factor *= arg_s3 ? s3 : 1;

                double arg_exp    = (s3 - 1) * h_j + (s1 * s2 - 1) * l_ik + (s1 + s2) * (h_i + s3 * l_ij) - 2 * (h_i + l_ij);
                double arg_dawson = (h_i + s3 * l_ij + (s1 + s2) * h_i / h_j * l_ij) / sqrt(2 * h_i / h_j * l_ij);
                result += factor * exp(arg_exp) * dawson(arg_dawson);
            }

    return result;
}

double F_symmetrical(double h_i, double h_j, double l_ij, double l_ik, bool arg_s1, bool arg_s2, bool arg_s3) {
    return F_norm_symmetrical(h_i, h_j, l_ij, l_ik, arg_s1, arg_s2, arg_s3) * exp(h_j + l_ik + 2 * (h_i + l_ij));
}

// =======================================================================================

void Z3_symmetrical::calc_base() {
    kappa  = l_ij * h_i - l_ik * h_j;
    _kappa = fabs(kappa) > 1e-6 ? 1 / kappa : NAN;

    sqrt_h_i  = sqrt(h_i);
    sqrt_h_j  = sqrt(h_j);
    sqrt_l_ij = sqrt(l_ij);
    sqrt_l_ik = sqrt(l_ik);

    _exp_2h_i  = exp(-2 * h_i);
    _exp_2h_j  = exp(-2 * h_j);
    _exp_2l_ij = exp(-2 * l_ij);
    _exp_2l_ik = exp(-2 * l_ik);

    cF3  = -(_exp_2h_i * _exp_2h_i) * _exp_2h_j * F3((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij - M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j - 0.5 * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i, sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik), M_SQRT2 * h_i * l_ij / (h_j * sqrt_l_ik) - M_SQRT2 * sqrt_l_ik) + (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) * F3((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij - M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i, sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik), M_SQRT2 * h_i * l_ij / (h_j * sqrt_l_ik) - M_SQRT2 * sqrt_l_ik) + 2. * _exp_2h_i * _exp_2h_j * _exp_2l_ij * _exp_2l_ik * F3((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij - 0.5 * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i, sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik), 0.) - 2. * _exp_2h_i * _exp_2l_ij * _exp_2l_ik * F3((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i, sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik), 0.) - _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) * F3((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j - 0.5 * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i, sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik), -M_SQRT2 * h_i * l_ij / (h_j * sqrt_l_ik) + M_SQRT2 * sqrt_l_ik) + F3((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i, sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik), -M_SQRT2 * h_i * l_ij / (h_j * sqrt_l_ik) + M_SQRT2 * sqrt_l_ik);
    _cF3 = 1 / cF3;

    E123 = -(_exp_2h_i * _exp_2h_i) * _exp_2h_j + (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) + 2. * _exp_2h_i * _exp_2h_j * _exp_2l_ij * _exp_2l_ik - 2. * _exp_2h_i * _exp_2l_ij * _exp_2l_ik - _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) + 1.;
    E12  = (_exp_2h_i * _exp_2h_i) * _exp_2h_j + (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) - 2. * _exp_2h_i * _exp_2h_j * _exp_2l_ij * _exp_2l_ik - 2. * _exp_2h_i * _exp_2l_ij * _exp_2l_ik + _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) + 1.;
    E1   = -(_exp_2h_i * _exp_2h_i) * _exp_2h_j - (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) + _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) + 1.;
    E13  = (_exp_2h_i * _exp_2h_i) * _exp_2h_j - (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) - _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) + 1.;
    E3   = -(_exp_2h_i * _exp_2h_i) * _exp_2h_j + (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) - 2. * _exp_2h_i * _exp_2h_j * _exp_2l_ij * _exp_2l_ik + 2. * _exp_2h_i * _exp_2l_ij * _exp_2l_ik - _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) + 1.;
    E    = (_exp_2h_i * _exp_2h_i) * _exp_2h_j + (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) + 2. * _exp_2h_i * _exp_2h_j * _exp_2l_ij * _exp_2l_ik + 2. * _exp_2h_i * _exp_2l_ij * _exp_2l_ik + _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) + 1.;

    FTilde123 = (_exp_2h_i * _exp_2h_i) * _exp_2h_j * dawson(-0.5 * M_SQRT2 * h_i / sqrt_l_ik + (0.5) * M_SQRT2 * l_ij / sqrt_l_ik + M_SQRT2 * sqrt_l_ik) + (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * h_i / sqrt_l_ik + (0.5) * M_SQRT2 * l_ij / sqrt_l_ik - M_SQRT2 * sqrt_l_ik) + 2. * _exp_2h_i * _exp_2h_j * _exp_2l_ij * _exp_2l_ik * dawson((0.5) * M_SQRT2 * h_i / sqrt_l_ik - 0.5 * M_SQRT2 * l_ij / sqrt_l_ik) - 2. * _exp_2h_i * _exp_2l_ij * _exp_2l_ik * dawson((0.5) * M_SQRT2 * h_i / sqrt_l_ik + (0.5) * M_SQRT2 * l_ij / sqrt_l_ik) - _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * h_i / sqrt_l_ik - 0.5 * M_SQRT2 * l_ij / sqrt_l_ik + M_SQRT2 * sqrt_l_ik) + dawson((0.5) * M_SQRT2 * h_i / sqrt_l_ik + (0.5) * M_SQRT2 * l_ij / sqrt_l_ik + M_SQRT2 * sqrt_l_ik);
    FTilde12  = -(_exp_2h_i * _exp_2h_i) * _exp_2h_j * dawson(-0.5 * M_SQRT2 * h_i / sqrt_l_ik + (0.5) * M_SQRT2 * l_ij / sqrt_l_ik + M_SQRT2 * sqrt_l_ik) + (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * h_i / sqrt_l_ik + (0.5) * M_SQRT2 * l_ij / sqrt_l_ik - M_SQRT2 * sqrt_l_ik) - 2. * _exp_2h_i * _exp_2h_j * _exp_2l_ij * _exp_2l_ik * dawson((0.5) * M_SQRT2 * h_i / sqrt_l_ik - 0.5 * M_SQRT2 * l_ij / sqrt_l_ik) - 2. * _exp_2h_i * _exp_2l_ij * _exp_2l_ik * dawson((0.5) * M_SQRT2 * h_i / sqrt_l_ik + (0.5) * M_SQRT2 * l_ij / sqrt_l_ik) + _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * h_i / sqrt_l_ik - 0.5 * M_SQRT2 * l_ij / sqrt_l_ik + M_SQRT2 * sqrt_l_ik) + dawson((0.5) * M_SQRT2 * h_i / sqrt_l_ik + (0.5) * M_SQRT2 * l_ij / sqrt_l_ik + M_SQRT2 * sqrt_l_ik);
    FTilde3   = (_exp_2h_i * _exp_2h_i) * _exp_2h_j * dawson(-0.5 * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) + (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij - M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) - 2. * _exp_2h_i * _exp_2h_j * _exp_2l_ij * _exp_2l_ik * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij - 0.5 * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) + 2. * _exp_2h_i * _exp_2l_ij * _exp_2l_ik * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) - _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j - 0.5 * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) + dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i);

    F13 = -(_exp_2h_i * _exp_2h_i) * _exp_2h_j * dawson(-0.5 * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) - (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij - M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) - _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j - 0.5 * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) + dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i);
    F   = -(_exp_2h_i * _exp_2h_i) * _exp_2h_j * dawson(-0.5 * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) + (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij - M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) + 2. * _exp_2h_i * _exp_2h_j * _exp_2l_ij * _exp_2l_ik * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij - 0.5 * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) + 2. * _exp_2h_i * _exp_2l_ij * _exp_2l_ik * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) + _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j - 0.5 * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) + dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i);
    F1  = (_exp_2h_i * _exp_2h_i) * _exp_2h_j * dawson(-0.5 * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) - (_exp_2h_i * _exp_2h_i) * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij - M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) + _exp_2h_j * (_exp_2l_ij * _exp_2l_ij) * dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j - 0.5 * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i) + dawson((0.5) * M_SQRT2 * sqrt_h_i * sqrt_h_j / sqrt_l_ij + M_SQRT2 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * sqrt_h_j * sqrt_l_ij / sqrt_h_i);
}

void Z3_symmetrical::calc_mi() {
    if (!std::isnan(_kappa)) {
        mi = (0.25) * M_SQRT2 * F13 * _cF3 * _kappa * l_ij * sqrt_l_ik - 0.25 * _kappa * h_i * h_j + (0.25) * _kappa * (h_j * h_j) * l_ik / l_ij - 0.25 * _kappa * l_ij + (0.25) * _kappa * h_j * (l_ij * l_ij) / h_i - 0.25 * _kappa * (h_j * h_j) * l_ij * l_ik / (h_i * h_i) - (0.25) / h_i;
        mi += -0.125 * E123 * _cF3 * _kappa * sqrt_h_j * sqrt_l_ij * sqrt_l_ik / sqrt_h_i + (0.125) * M_SQRT2 * FTilde12 * _cF3 * _kappa * h_j * l_ik * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i) - 0.125 * M_SQRT2 * FTilde123 * _cF3 * _kappa * h_j * l_ik * sqrt_h_j / (sqrt_h_i * sqrt_l_ij) + (0.25) * M_SQRT2 * FTilde123 * _cF3 * _kappa * sqrt_h_i * sqrt_h_j * sqrt_l_ij;
    } else if (abs(h_i - h_j) <= 1e-6) {
        mi = M_SQRT2 * FTilde123 / (-3. * E123 * sqrt_l_ij + 9. * M_SQRT2 * FTilde12 * l_ij + 3. * M_SQRT2 * FTilde123 * h_i) - 1.0 / 3.0 * h_i / l_ij - (1.0 / 3.0) / h_i;
    } else {
        mi = -0.25 * h_j / l_ij - 1.0 / 12.0 * sqrt_h_i * sqrt_h_j / (sqrt_l_ij * sqrt_l_ik) - 1.0 / 12.0 * sqrt_l_ij / (sqrt_h_i * sqrt_h_j * sqrt_l_ik) - 0.5 * l_ij / h_j - 1.0 / 12.0 * l_ij * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i * sqrt_l_ik) - (0.25) / h_i + (0.25) * h_j * l_ij / (h_i * h_i);
        mi += (0.25) * E3 * _cF3 * l_ij / h_j - 0.25 * M_SQRT2 * F * _cF3 * l_ij * sqrt_l_ij / (sqrt_h_i * sqrt_h_j) - 1.0 / 12.0 * M_SQRT2 * FTilde12 * _cF3 * h_j / sqrt_l_ik + (1.0 / 24.0) * M_SQRT2 * FTilde123 * _cF3 / sqrt_l_ik + (1.0 / 12.0) * M_SQRT2 * F13 * _cF3 * h_i / sqrt_l_ik - 0.5 * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j) + (1.0 / 3.0) * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik);
        mi += -1.0 / 12.0 * E1 * _cF3 * l_ij * sqrt_l_ij / (sqrt_h_i * sqrt_h_j * sqrt_l_ik) - 1.0 / 12.0 * E13 * _cF3 * sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik) - 1.0 / 6.0 * E3 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) + (0.25) * M_SQRT2 * F * _cF3 * (l_ij * l_ij) / (h_j * sqrt_l_ik) - 0.125 * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i) - 1.0 / 6.0 * M_SQRT2 * F13 * _cF3 * l_ij / (h_j * sqrt_l_ik) - 0.25 * M_SQRT2 * FTilde3 * _cF3 * sqrt_h_i * sqrt_l_ij / sqrt_h_j;
        mi += (1.0 / 12.0) * E12 * _cF3 * sqrt_h_j * sqrt_l_ij / (sqrt_h_i * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) / (h_j * sqrt_l_ik) + (1.0 / 24.0) * M_SQRT2 * FTilde12 * _cF3 * l_ij / (h_i * sqrt_l_ik) + (0.125) * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_j / (sqrt_h_i * sqrt_l_ij) - 1.0 / 12.0 * M_SQRT2 * FTilde123 * _cF3 * h_j * l_ij / (h_i * sqrt_l_ik) + (0.25) * M_SQRT2 * F13 * _cF3 * sqrt_l_ij / (sqrt_h_i * sqrt_h_j) + (1.0 / 12.0) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) / (h_i * sqrt_l_ik);
        mi += (1.0 / 12.0) * M_SQRT2 * FTilde123 * _cF3 * h_i * l_ij / (h_j * sqrt_l_ik) + (1.0 / 3.0) * M_SQRT2 * F13 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * sqrt_l_ik) + (0.25) * M_SQRT2 * FTilde3 * _cF3 * h_i * l_ij / (h_j * sqrt_l_ik);
    }
}

void Z3_symmetrical::calc_mj() {
    if (!std::isnan(_kappa)) {
        mj = (0.25) * E123 * _cF3 * _kappa * sqrt_h_i * sqrt_l_ij * sqrt_l_ik / sqrt_h_j - 0.5 * _kappa * (h_i * h_i) + (0.5) * _kappa * h_i * h_j * l_ik / l_ij + (0.5) * _kappa * h_i * l_ij / h_j - 0.5 * _kappa * (l_ij * l_ij) + (0.5) * _kappa * h_j * l_ij * l_ik / h_i - (0.5) / h_j;
        mj += -0.5 * M_SQRT2 * F13 * _cF3 * _kappa * h_i * l_ij * sqrt_l_ik / h_j - 0.25 * M_SQRT2 * FTilde12 * _cF3 * _kappa * l_ik * sqrt_h_j * sqrt_l_ij / sqrt_h_i - 0.25 * M_SQRT2 * FTilde123 * _cF3 * _kappa * l_ik * sqrt_h_i * sqrt_h_j / sqrt_l_ij;
    } else if (abs(h_i - h_j) <= 1e-6) {
        mj = mi;
    } else {
        mj = -0.5 * h_i / l_ij - 2.0 / 3.0 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j * sqrt_l_ik) + h_i * l_ij / (h_j * h_j) + (1.0 / 6.0) * l_ij * sqrt_l_ij / (sqrt_h_i * sqrt_h_j * sqrt_l_ik) + (1.0 / 6.0) * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) - (0.5) / h_j - 0.5 * l_ij / h_i;
        mj += -0.5 * E3 * _cF3 * h_i * l_ij / (h_j * h_j) + (0.5) * M_SQRT2 * F * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j) + (1.0 / 6.0) * M_SQRT2 * FTilde12 * _cF3 * h_i / sqrt_l_ik + (1.0 / 6.0) * M_SQRT2 * FTilde123 * _cF3 * l_ij / sqrt_l_ik + M_SQRT2 * F13 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j) + (0.5) * M_SQRT2 * FTilde3 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j) + (1.0 / 6.0) * h_i * sqrt_h_i / (sqrt_h_j * sqrt_l_ij * sqrt_l_ik);
        mj += -1.0 / 6.0 * E12 * _cF3 * sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik) + (1.0 / 3.0) * E3 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * FTilde12 * _cF3 * l_ij / (h_j * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * FTilde123 * _cF3 * h_i / (h_j * sqrt_l_ik) - 1.0 / 6.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) / (h_j * sqrt_l_ik) - 1.0 / 6.0 * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) / (h_j * sqrt_l_ik) - 0.5 * M_SQRT2 * F13 * _cF3 * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j);
        mj += (1.0 / 6.0) * E1 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) + (1.0 / 6.0) * E13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) - 0.5 * M_SQRT2 * F * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * sqrt_l_ik) + (0.25) * M_SQRT2 * FTilde12 * _cF3 * sqrt_l_ij / (sqrt_h_i * sqrt_h_j) + (0.25) * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_i / (sqrt_h_j * sqrt_l_ij) - 2.0 / 3.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * sqrt_l_ik) - 0.5 * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j) * sqrt_l_ik);
        mj += -1.0 / 6.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * sqrt_l_ik) - 1.0 / 6.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j) * sqrt_l_ik) + (1.0 / 3.0) * M_SQRT2 * F13 * _cF3 * h_i * l_ij / ((h_j * h_j) * sqrt_l_ik);
    }
}

void Z3_symmetrical::calc_eta_ij() {
    if (!std::isnan(_kappa)) {
        eta_ij = (0.25) * M_SQRT2 * F13 * _cF3 * _kappa * h_i * sqrt_l_ik + (0.25) * _kappa * (h_i * h_i) * h_j / l_ij - 0.25 * _kappa * h_i * (h_j * h_j) * l_ik / (l_ij * l_ij) - 0.25 * _kappa * h_i - 0.25 * _kappa * h_j * l_ij + (0.25) * _kappa * (h_j * h_j) * l_ik / h_i - (0.25) / l_ij;
        eta_ij += -0.125 * E123 * _cF3 * _kappa * sqrt_h_i * sqrt_h_j * sqrt_l_ik / sqrt_l_ij - 0.125 * M_SQRT2 * FTilde12 * _cF3 * _kappa * h_j * l_ik * sqrt_h_j / (sqrt_h_i * sqrt_l_ij) + (0.25) * M_SQRT2 * FTilde12 * _cF3 * _kappa * sqrt_h_i * sqrt_h_j * sqrt_l_ij + (0.125) * M_SQRT2 * FTilde123 * _cF3 * _kappa * h_j * l_ik * sqrt_h_i * sqrt_h_j / (l_ij * sqrt_l_ij);
    } else if (abs(h_i - h_j) <= 1e-6) {
        eta_ij = M_SQRT2 * FTilde12 / (-2. * E123 * sqrt_l_ij + 6. * M_SQRT2 * FTilde12 * l_ij + 2. * M_SQRT2 * FTilde123 * h_i) - M_SQRT2 * FTilde123 * h_i / (-6. * E123 * l_ij * sqrt_l_ij + 18. * M_SQRT2 * FTilde12 * (l_ij * l_ij) + 6. * M_SQRT2 * FTilde123 * h_i * l_ij) + (1.0 / 6.0) * (h_i * h_i) / (l_ij * l_ij) - 0.5 - (1.0 / 3.0) / l_ij;
    } else {
        eta_ij = (0.25) * h_i * h_j / (l_ij * l_ij) - 1.0 / 12.0 * h_i * sqrt_h_i * sqrt_h_j / (l_ij * sqrt_l_ij * sqrt_l_ik) - 0.5 * h_i / h_j - 1.0 / 12.0 * sqrt_h_i / (sqrt_h_j * sqrt_l_ij * sqrt_l_ik) - 1.0 / 12.0 * sqrt_h_j * sqrt_l_ij / (sqrt_h_i * sqrt_l_ik) - (0.25) / l_ij - 0.25 * h_j / h_i;
        eta_ij += (0.25) * E3 * _cF3 * h_i / h_j - 0.25 * M_SQRT2 * F * _cF3 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (1.0 / 24.0) * M_SQRT2 * FTilde12 * _cF3 / sqrt_l_ik - 1.0 / 12.0 * M_SQRT2 * FTilde123 * _cF3 * h_j / sqrt_l_ik - 0.5 * M_SQRT2 * F13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j) + (1.0 / 12.0) * M_SQRT2 * F13 * _cF3 * l_ij / sqrt_l_ik + (1.0 / 3.0) * h_i * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik);
        eta_ij += -1.0 / 12.0 * E1 * _cF3 * sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik) - 1.0 / 12.0 * E13 * _cF3 * h_i * sqrt_h_i / (sqrt_h_j * sqrt_l_ij * sqrt_l_ik) - 1.0 / 6.0 * E3 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) - 0.125 * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_i * sqrt_h_j / (l_ij * sqrt_l_ij) - 1.0 / 6.0 * M_SQRT2 * F13 * _cF3 * h_i / (h_j * sqrt_l_ik) + (0.25) * M_SQRT2 * F13 * _cF3 * sqrt_h_i / (sqrt_h_j * sqrt_l_ij) - 0.25 * M_SQRT2 * FTilde3 * _cF3 * h_i * sqrt_h_i / (sqrt_h_j * sqrt_l_ij);
        eta_ij += (1.0 / 12.0) * E12 * _cF3 * sqrt_h_i * sqrt_h_j / (sqrt_l_ij * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * h_j / (l_ij * sqrt_l_ik) + (0.125) * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_j / (sqrt_h_i * sqrt_l_ij) + (1.0 / 12.0) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) / (h_j * sqrt_l_ik) + (1.0 / 24.0) * M_SQRT2 * FTilde123 * _cF3 * h_i / (l_ij * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) / (l_ij * sqrt_l_ik) + (0.25) * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) / (h_j * sqrt_l_ik);
        eta_ij += (0.25) * M_SQRT2 * F * _cF3 * h_i * l_ij / (h_j * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * FTilde12 * _cF3 * h_i * l_ij / (h_j * sqrt_l_ik) + (1.0 / 3.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j) * sqrt_l_ik);
    }
}

void Z3_symmetrical::calc_eta_ik() {
    if (!std::isnan(_kappa)) {
        eta_ik = (0.25) * E123 * _cF3 * _kappa * sqrt_h_i * sqrt_h_j * sqrt_l_ij / sqrt_l_ik - 0.5 * M_SQRT2 * F13 * _cF3 * _kappa * h_j * sqrt_l_ik - 0.25 * M_SQRT2 * FTilde12 * _cF3 * _kappa * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij / l_ik - _kappa * h_i * l_ij + (0.5) * _kappa * h_i * l_ij / l_ik + _kappa * h_j * l_ik - (0.5) / l_ik;
        eta_ik += -0.25 * M_SQRT2 * FTilde123 * _cF3 * _kappa * h_i * sqrt_h_i * sqrt_h_j * sqrt_l_ij / l_ik;
    } else if (abs(h_i - h_j) <= 1e-6) {
        eta_ik = eta_ij;
    } else {
        eta_ik = -0.5 * E3 * _cF3 + (0.25) * M_SQRT2 * F13 * _cF3 / sqrt_l_ik - 1.0 / 6.0 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) + (1.0 / 6.0) * l_ij * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_l_ik) - 0.5 * sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik) + (1.0 / 6.0) * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) - (0.5) / l_ik;
        eta_ik += -0.5 * M_SQRT2 * F * _cF3 * l_ij / sqrt_l_ik - 0.5 * M_SQRT2 * F1 * _cF3 * h_j / sqrt_l_ik - 0.25 * M_SQRT2 * FTilde12 * _cF3 * l_ij / sqrt_l_ik - 1.0 / 12.0 * M_SQRT2 * FTilde12 * _cF3 * l_ij / (l_ik * sqrt_l_ik) - 0.25 * M_SQRT2 * FTilde123 * _cF3 * h_i / sqrt_l_ik - 0.5 * M_SQRT2 * FTilde3 * _cF3 * h_i / sqrt_l_ik + (1.0 / 6.0) * h_i * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij * sqrt_l_ik);
        eta_ik += (0.5) * M_SQRT2 * F * _cF3 * sqrt_h_j * sqrt_l_ij / sqrt_h_i + (0.5) * M_SQRT2 * F1 * _cF3 * h_i * l_ij / (l_ik * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * FTilde123 * _cF3 * h_i / (l_ik * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) / (l_ik * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) / (l_ik * sqrt_l_ik) + M_SQRT2 * F13 * _cF3 * sqrt_h_i * sqrt_l_ij / sqrt_h_j + (0.5) * M_SQRT2 * FTilde3 * _cF3 * sqrt_h_i * sqrt_h_j / sqrt_l_ij;
        eta_ik += -1.0 / 12.0 * E1 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) + (0.25) * E1 * _cF3 * sqrt_h_j * sqrt_l_ij / (sqrt_h_i * sqrt_l_ik) - 1.0 / 6.0 * E12 * _cF3 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_l_ik) - 1.0 / 12.0 * E13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) + (0.25) * E13 * _cF3 * sqrt_h_i * sqrt_h_j / (sqrt_l_ij * sqrt_l_ik) + (0.25) * E3 * _cF3 * sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik) + (1.0 / 6.0) * M_SQRT2 * FTilde12 * _cF3 * h_i * h_j / (l_ik * sqrt_l_ik);
        eta_ik += (1.0 / 12.0) * E3 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij) / (h_j * l_ik * sqrt_l_ik) + (1.0 / 6.0) * M_SQRT2 * FTilde123 * _cF3 * h_j * l_ij / (l_ik * sqrt_l_ik) - 1.0 / 6.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * l_ik * sqrt_l_ik) - 0.25 * M_SQRT2 * F13 * _cF3 * h_i * h_j / (l_ij * sqrt_l_ik) - 0.5 * M_SQRT2 * F13 * _cF3 * h_i * l_ij / (h_j * sqrt_l_ik) - 0.25 * M_SQRT2 * F13 * _cF3 * h_j * l_ij / (h_i * sqrt_l_ik);
        eta_ik += (1.0 / 12.0) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * l_ij / (h_j * l_ik * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * F13 * _cF3 * h_i * l_ij / (h_j * l_ik * sqrt_l_ik);
    }
}

void Z3_symmetrical::calc_mj_eta_ij() {
    if (!std::isnan(_kappa)) {
        mj_eta_ij = -0.25 * _kappa * eta_ij * (h_i * h_i) - 0.25 * _kappa * eta_ij * (l_ij * l_ij) + (0.5) * _kappa * eta_ij * l_ik + (0.5) * _kappa * h_i * h_j - 0.5 * _kappa * h_i * mj;
        mj_eta_ij += -0.25 * _kappa * (h_i * h_i * h_i) / h_j + (0.5) * _kappa * (h_i * h_i) * l_ij / (h_j * h_j) - 0.25 * _kappa * h_i / h_j - 0.25 * _kappa * l_ij * l_ik + (0.25) * _kappa * l_ik / l_ij;
        mj_eta_ij += -0.5 * E12 * _kappa * h_i / E123 - 0.25 * _kappa * eta_ik * l_ij * l_ik - 0.25 * _kappa * h_i * (l_ij * l_ij) / h_j - 0.5 * _kappa * h_i * l_ik / h_j - 0.5 * _kappa * h_j * l_ik * mi;
        mj_eta_ij += (0.25) * E1 * _kappa * (h_i * h_i) / E123 + (0.25) * E1 * _kappa * l_ik / E123 - 0.25 * _kappa * (h_i * h_i * h_i) * mi / l_ij - 0.25 * _kappa * (h_i * h_i) * l_ik / l_ij - 0.25 * _kappa * (h_i * h_i) * mi / h_j;
        mj_eta_ij += (0.25) * E1 * _kappa * (l_ij * l_ij) / E123 + (0.75) * _kappa * h_i * l_ij * mi + (0.25) * _kappa * h_j * l_ij * mj + (0.5) * E13 * _kappa * (h_i * h_i) * mj / E123 + (0.5) * E13 * _kappa * (h_i * h_i) / (E123 * h_j);
        mj_eta_ij += -0.5 * E12 * _kappa * h_i * l_ik / E123 + (0.5) * _kappa * eta_ij * (h_i * h_i) * (l_ij * l_ij) / (h_j * h_j) + (0.5) * _kappa * (h_i * h_i * h_i) * l_ij * mi / (h_j * h_j) + (0.5) * _kappa * (h_i * h_i) * l_ij * l_ik / (h_j * h_j) + (0.5) * _kappa * h_i * l_ik * mi / l_ij;
        mj_eta_ij += -0.5 * E12 * _kappa * (h_i * h_i) * mi / E123 - 0.25 * E12 * _kappa * h_j * l_ij / E123 - 0.5 * _kappa * (h_i * h_i) * l_ij * mj / h_j - 0.5 * _kappa * (h_i * h_i) * l_ik * mi / h_j - 0.25 * E3 * _kappa * (h_i * h_i * h_i) / (E123 * h_j);
        mj_eta_ij += -0.25 * _kappa * eta_ij * h_i * l_ij / h_j - 0.25 * _kappa * eta_ik * (h_i * h_i) * l_ik / l_ij - 0.25 * _kappa * eta_ik * h_i * l_ik / h_j + (0.25) * E13 * _kappa * (h_i * h_i * h_i) / (E123 * l_ij) + (0.25) * E13 * _kappa * h_i * l_ij / E123;
        mj_eta_ij += (0.5) * E1 * _kappa * eta_ij * l_ij * l_ik / E123 + (0.5) * E1 * _kappa * h_i * l_ij * mj / E123 + (0.5) * E1 * _kappa * h_i * l_ij / (E123 * h_j) + (0.25) * _kappa * (h_i * h_i) * h_j * mj / l_ij + (0.25) * _kappa * h_j * l_ik * mj / l_ij;
        mj_eta_ij += (0.5) * E1 * _kappa * h_i * l_ik * mi / E123 + (0.5) * _kappa * eta_ij * h_i * h_j * l_ik / l_ij + (0.5) * E13 * _kappa * eta_ij * h_i * l_ik / E123 + (0.5) * E13 * _kappa * (h_i * h_i * h_i) * mi / (E123 * h_j) + (0.5) * E13 * _kappa * (h_i * h_i) * l_ik / (E123 * h_j);
        mj_eta_ij += -0.5 * E12 * _kappa * eta_ij * h_i * l_ij / E123 - 0.5 * E12 * _kappa * eta_ij * h_j * l_ik / E123 - 0.5 * E12 * _kappa * eta_ik * h_i * l_ik / E123 - 0.5 * E12 * _kappa * h_i * h_j * mj / E123 + (0.5) * _kappa * eta_ik * (h_i * h_i) * l_ij * l_ik / (h_j * h_j);
        mj_eta_ij += -0.25 * E12 * _kappa * (h_i * h_i) * h_j / (E123 * l_ij) - 0.25 * E12 * _kappa * h_j * l_ik / (E123 * l_ij) - 0.5 * _kappa * eta_ij * h_i * l_ij * l_ik / h_j - 0.5 * E3 * _kappa * (h_i * h_i) * l_ij / (E123 * (h_j * h_j)) - 0.25 * E3 * _kappa * h_i * l_ik / (E123 * h_j);
        mj_eta_ij += (0.5) * E1 * _kappa * eta_ij * h_i * (l_ij * l_ij) / (E123 * h_j) + (0.5) * E1 * _kappa * (h_i * h_i) * l_ij * mi / (E123 * h_j) + (0.5) * E1 * _kappa * h_i * l_ij * l_ik / (E123 * h_j) + (0.25) * E13 * _kappa * h_i * l_ik / (E123 * l_ij) - 0.25 * E3 * _kappa * h_i * (l_ij * l_ij) / (E123 * h_j);
        mj_eta_ij += (0.5) * E13 * _kappa * eta_ij * (h_i * h_i) * l_ij / (E123 * h_j) + (0.5) * E13 * _kappa * eta_ik * (h_i * h_i) * l_ik / (E123 * h_j) + (0.5) * E13 * _kappa * (h_i * h_i) * l_ik * mi / (E123 * l_ij) - 0.5 * E3 * _kappa * eta_ij * (h_i * h_i) * (l_ij * l_ij) / (E123 * (h_j * h_j)) - 0.5 * E3 * _kappa * (h_i * h_i) * l_ij * l_ik / (E123 * (h_j * h_j));
        mj_eta_ij += (0.5) * E1 * _kappa * eta_ik * h_i * l_ij * l_ik / (E123 * h_j) - 0.5 * E12 * _kappa * h_i * h_j * l_ik * mi / (E123 * l_ij) - 0.5 * E3 * _kappa * (h_i * h_i * h_i) * l_ij * mi / (E123 * (h_j * h_j)) - 0.5 * E3 * _kappa * (h_i * h_i) * l_ij * mj / (E123 * h_j) - 0.5 * E3 * _kappa * (h_i * h_i) * l_ik * mi / (E123 * h_j);
        mj_eta_ij += -0.5 * E3 * _kappa * eta_ij * h_i * l_ij * l_ik / (E123 * h_j) - 0.5 * E3 * _kappa * eta_ik * (h_i * h_i) * l_ij * l_ik / (E123 * (h_j * h_j));
    } else if (abs(h_i - h_j) <= 1e-6) {
        mj_eta_ij = E / (-10. * E123 + 30. * M_SQRT2 * FTilde12 * sqrt_l_ij + 10. * M_SQRT2 * FTilde123 * h_i / sqrt_l_ij) - E1 / (-10. * E123 * h_i + 30. * M_SQRT2 * FTilde12 * h_i * sqrt_l_ij + 10. * M_SQRT2 * FTilde123 * (h_i * h_i) / sqrt_l_ij) + 3. * E12 / (-20. * E123 * l_ij + 60. * M_SQRT2 * FTilde12 * l_ij * sqrt_l_ij + 20. * M_SQRT2 * FTilde123 * h_i * sqrt_l_ij) - 3. * E12 / (-20. * E123 + 60. * M_SQRT2 * FTilde12 * sqrt_l_ij + 20. * M_SQRT2 * FTilde123 * h_i / sqrt_l_ij) - E123 / (-120. * E123 * h_i * l_ij + 360. * M_SQRT2 * FTilde12 * h_i * l_ij * sqrt_l_ij + 120. * M_SQRT2 * FTilde123 * (h_i * h_i) * sqrt_l_ij) - E123 / (-4. * E123 * h_i + 12. * M_SQRT2 * FTilde12 * h_i * sqrt_l_ij + 4. * M_SQRT2 * FTilde123 * (h_i * h_i) / sqrt_l_ij) + E123 / (-5. * E123 * h_i + 15. * M_SQRT2 * FTilde12 * h_i * sqrt_l_ij + 5. * M_SQRT2 * FTilde123 * (h_i * h_i) / sqrt_l_ij);
        mj_eta_ij += -E1 * h_i / (-10. * E123 * l_ij + 30. * M_SQRT2 * FTilde12 * l_ij * sqrt_l_ij + 10. * M_SQRT2 * FTilde123 * h_i * sqrt_l_ij) + E12 * (h_i * h_i) / (-20. * E123 * (l_ij * l_ij) + 60. * M_SQRT2 * FTilde12 * (l_ij * l_ij) * sqrt_l_ij + 20. * M_SQRT2 * FTilde123 * h_i * l_ij * sqrt_l_ij) + E123 * (h_i * h_i * h_i) / (-15. * E123 * (l_ij * l_ij * l_ij) + 45. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij) * sqrt_l_ij + 15. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij) * sqrt_l_ij) + E123 * (h_i * h_i) / (-12. * E123 * h_i * (l_ij * l_ij) + 36. * M_SQRT2 * FTilde12 * h_i * (l_ij * l_ij) * sqrt_l_ij + 12. * M_SQRT2 * FTilde123 * (h_i * h_i) * l_ij * sqrt_l_ij) - E123 * h_i / (-12. * E123 * (l_ij * l_ij) + 36. * M_SQRT2 * FTilde12 * (l_ij * l_ij) * sqrt_l_ij + 12. * M_SQRT2 * FTilde123 * h_i * l_ij * sqrt_l_ij) - E123 * h_i / (-20. * E123 * l_ij + 60. * M_SQRT2 * FTilde12 * l_ij * sqrt_l_ij + 20. * M_SQRT2 * FTilde123 * h_i * sqrt_l_ij) + (0.125) / (h_i * l_ij);
        mj_eta_ij += -4. * E123 * h_i / (-15. * E123 * (l_ij * l_ij) + 45. * M_SQRT2 * FTilde12 * (l_ij * l_ij) * sqrt_l_ij + 15. * M_SQRT2 * FTilde123 * h_i * l_ij * sqrt_l_ij) + 3. * E123 * l_ij / (-20. * E123 * h_i + 60. * M_SQRT2 * FTilde12 * h_i * sqrt_l_ij + 20. * M_SQRT2 * FTilde123 * (h_i * h_i) / sqrt_l_ij) + M_SQRT2 * FTilde12 * h_i / (-2. * E123 * l_ij * sqrt_l_ij + 6. * M_SQRT2 * FTilde12 * (l_ij * l_ij) + 2. * M_SQRT2 * FTilde123 * h_i * l_ij) + M_SQRT2 * FTilde12 * h_i / (-4. * E123 * l_ij * sqrt_l_ij + 12. * M_SQRT2 * FTilde12 * (l_ij * l_ij) + 4. * M_SQRT2 * FTilde123 * h_i * l_ij) + M_SQRT2 * FTilde12 * h_i / (-2. * E123 * sqrt_l_ij + 6. * M_SQRT2 * FTilde12 * l_ij + 2. * M_SQRT2 * FTilde123 * h_i) - 2. * M_SQRT2 * FTilde123 / (-8. * E123 * l_ij * sqrt_l_ij + 24. * M_SQRT2 * FTilde12 * (l_ij * l_ij) + 8. * M_SQRT2 * FTilde123 * h_i * l_ij) - M_SQRT2 * FTilde123 / (-4. * E123 * sqrt_l_ij + 12. * M_SQRT2 * FTilde12 * l_ij + 4. * M_SQRT2 * FTilde123 * h_i);
        mj_eta_ij += -M_SQRT2 * FTilde12 * (h_i * h_i * h_i) / (-4. * E123 * (l_ij * l_ij) * sqrt_l_ij + 12. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij) + 4. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij)) - M_SQRT2 * FTilde12 * (h_i * h_i) / (-4. * E123 * h_i * l_ij * sqrt_l_ij + 12. * M_SQRT2 * FTilde12 * h_i * (l_ij * l_ij) + 4. * M_SQRT2 * FTilde123 * (h_i * h_i) * l_ij) - M_SQRT2 * FTilde12 * sqrt_l_ij / (-8. * E123 * h_i * l_ij + 24. * M_SQRT2 * FTilde12 * h_i * l_ij * sqrt_l_ij + 8. * M_SQRT2 * FTilde123 * (h_i * h_i) * sqrt_l_ij) + M_SQRT2 * FTilde123 * (h_i * h_i) / (-3. * E123 * (l_ij * l_ij) * sqrt_l_ij + 9. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij) + 3. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij)) + M_SQRT2 * FTilde123 * (h_i * h_i) / (-12. * E123 * (l_ij * l_ij) * sqrt_l_ij + 36. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij) + 12. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij)) + M_SQRT2 * FTilde123 * h_i / (-8. * E123 * h_i * l_ij * sqrt_l_ij + 24. * M_SQRT2 * FTilde12 * h_i * (l_ij * l_ij) + 8. * M_SQRT2 * FTilde123 * (h_i * h_i) * l_ij) + M_SQRT2 * FTilde123 * h_i / (-4. * E123 * h_i * sqrt_l_ij + 12. * M_SQRT2 * FTilde12 * h_i * l_ij + 4. * M_SQRT2 * FTilde123 * (h_i * h_i));
        mj_eta_ij += -9. * M_SQRT2 * FTilde12 * l_ij * sqrt_l_ij / (-20. * E123 * h_i + 60. * M_SQRT2 * FTilde12 * h_i * sqrt_l_ij + 20. * M_SQRT2 * FTilde123 * (h_i * h_i) / sqrt_l_ij) + 2. * M_SQRT2 * FTilde12 * sqrt_l_ij / (-4. * E123 * h_i + 12. * M_SQRT2 * FTilde12 * h_i * sqrt_l_ij + 4. * M_SQRT2 * FTilde123 * (h_i * h_i) / sqrt_l_ij) - M_SQRT2 * FTilde123 * (h_i * h_i * h_i * h_i) / (-15. * E123 * (l_ij * l_ij * l_ij) * sqrt_l_ij + 45. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij * l_ij) + 15. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij * l_ij)) - M_SQRT2 * FTilde123 * (h_i * h_i * h_i) / (-12. * E123 * h_i * (l_ij * l_ij) * sqrt_l_ij + 36. * M_SQRT2 * FTilde12 * h_i * (l_ij * l_ij * l_ij) + 12. * M_SQRT2 * FTilde123 * (h_i * h_i) * (l_ij * l_ij));
    } else {
        mj_eta_ij = -0.125 * (h_i * h_i) * h_j / (l_ij * l_ij * l_ij) + (0.5) * (h_i * h_i) / (h_j * l_ij) - (h_i * h_i) * l_ij / (h_j * h_j * h_j) - 0.15 * h_i / l_ik + (0.25) * h_i / (l_ij * l_ij) + (0.5) * h_i / (h_j * h_j) + (0.125) / (h_j * l_ij);
        mj_eta_ij += -0.025 * (h_i * h_i * h_i) / ((l_ij * l_ij) * l_ik) + (7.0 / 60.0) * (h_i * h_i * h_i) / ((h_j * h_j) * l_ik) - 8.0 / 15.0 * (h_i * h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j * h_j) * l_ik) - 1.0 / 30.0 * h_i / ((h_j * h_j) * l_ik) + (1.0 / 60.0) * l_ij / (h_j * l_ik) - 0.025 * (l_ij * l_ij) / (h_i * l_ik) + (0.125) * h_j * l_ij / (h_i * h_i);
        mj_eta_ij += -0.25 * E3 * _cF3 * h_i / (h_j * h_j) + (1.0 / 12.0) * (h_i * h_i) * sqrt_h_i * sqrt_h_j / ((l_ij * l_ij) * sqrt_l_ij * sqrt_l_ik) - 0.5 * (h_i * h_i) * sqrt_h_i / (h_j * sqrt_h_j * sqrt_l_ij * sqrt_l_ik) - 5.0 / 6.0 * h_i * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j * sqrt_l_ik) + (1.0 / 12.0) * sqrt_h_i * sqrt_h_j / (sqrt_l_ij * sqrt_l_ik) - 1.0 / 12.0 * sqrt_l_ij / (sqrt_h_i * sqrt_h_j * sqrt_l_ik) - 1.0 / 6.0 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik);
        mj_eta_ij += (0.05) * E12 * _cF3 * l_ij / l_ik + (5.0 / 48.0) * M_SQRT2 * FTilde123 * _cF3 / sqrt_l_ik + (1.0 / 60.0) * (h_i * h_i) / (h_j * l_ij * l_ik) + (4.0 / 3.0) * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * sqrt_h_j * sqrt_l_ik) + (0.45) * (h_i * h_i) * l_ij / ((h_j * h_j * h_j) * l_ik) + (7.0 / 60.0) * h_i * (l_ij * l_ij) / ((h_j * h_j) * l_ik) + (1.0 / 24.0) * sqrt_h_i / (h_j * sqrt_h_j * sqrt_l_ij * sqrt_l_ik);
        mj_eta_ij += -0.075 * E1 * _cF3 * (h_i * h_i) / (h_j * l_ik) - 0.025 * E1 * _cF3 * (l_ij * l_ij) / (h_j * l_ik) - 7.0 / 120.0 * E3 * _cF3 * (h_i * h_i * h_i) / ((h_j * h_j) * l_ik) - 0.25 * E3 * _cF3 * (h_i * h_i) / (h_j * l_ij) + (0.5) * E3 * _cF3 * (h_i * h_i) * l_ij / (h_j * h_j * h_j) - 1.0 / 48.0 * M_SQRT2 * FTilde12 * _cF3 / (h_j * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * F13 * _cF3 * h_i / sqrt_l_ik;
        mj_eta_ij += (0.05) * E12 * _cF3 * (h_i * h_i) / (l_ij * l_ik) - 1.0 / 60.0 * E12 * _cF3 * h_i / (h_j * l_ik) + (11.0 / 120.0) * E13 * _cF3 * (h_i * h_i) / ((h_j * h_j) * l_ik) - 0.225 * E3 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j * h_j) * l_ik) + (0.5) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * sqrt_h_i / (h_j * sqrt_h_j * sqrt_l_ij) - M_SQRT2 * F13 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * sqrt_h_j) + (0.5) * M_SQRT2 * F13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j);
        mj_eta_ij += -7.0 / 60.0 * E * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j) * l_ik) - 7.0 / 60.0 * E12 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j) * l_ik) - 0.075 * E13 * _cF3 * h_i * l_ij / (h_j * l_ik) - 2.0 / 3.0 * E3 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * sqrt_h_j * sqrt_l_ik) - 7.0 / 120.0 * E3 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * l_ik) - 0.5 * M_SQRT2 * F * _cF3 * (h_i * h_i) / (h_j * sqrt_l_ik) - 0.375 * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) / ((h_j * h_j) * sqrt_l_ik);
        mj_eta_ij += -1.0 / 3.0 * E1 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j * sqrt_l_ik) - 1.0 / 3.0 * E13 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j * sqrt_l_ik) - 0.5 * M_SQRT2 * F * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j) - 0.25 * M_SQRT2 * F1 * _cF3 * h_i / (h_j * sqrt_l_ik) - 0.25 * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) / (h_j * sqrt_l_ik) - 0.25 * M_SQRT2 * F13 * _cF3 * h_i * sqrt_h_i / (l_ij * sqrt_h_j * sqrt_l_ij) - 0.5 * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j);
        mj_eta_ij += -1.0 / 12.0 * E1 * _cF3 * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) - 1.0 / 12.0 * E12 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / (l_ij * sqrt_l_ij * sqrt_l_ik) - 1.0 / 12.0 * E13 * _cF3 * h_i * sqrt_h_i / (h_j * sqrt_h_j * sqrt_l_ij * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * F * _cF3 * (l_ij * l_ij) / (h_j * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) / ((l_ij * l_ij) * sqrt_l_ik) - 1.0 / 6.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) / ((h_j * h_j) * sqrt_l_ik) - 0.125 * M_SQRT2 * F13 * _cF3 * sqrt_h_i / (h_j * sqrt_h_j * sqrt_l_ij);
        mj_eta_ij += -0.025 * E13 * _cF3 * (h_i * h_i * h_i) / (h_j * l_ij * l_ik) + (0.25) * E3 * _cF3 * (h_i * h_i) * sqrt_h_i / (h_j * sqrt_h_j * sqrt_l_ij * sqrt_l_ik) - 0.0625 * M_SQRT2 * FTilde12 * _cF3 / (sqrt_h_i * sqrt_h_j * sqrt_l_ij) - 0.0625 * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_i * sqrt_h_j / (l_ij * sqrt_l_ij) - 0.0625 * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i) - 0.0625 * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_i / (l_ij * sqrt_h_j * sqrt_l_ij) - 1.0 / 24.0 * M_SQRT2 * F13 * _cF3 * l_ij / (h_j * sqrt_l_ik);
        mj_eta_ij += (1.0 / 6.0) * E * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) + (1.0 / 12.0) * E1 * _cF3 * h_i * sqrt_h_i / (sqrt_h_j * sqrt_l_ij * sqrt_l_ik) + (1.0 / 6.0) * E12 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) + (0.25) * M_SQRT2 * F * _cF3 * h_i * sqrt_h_i / (sqrt_h_j * sqrt_l_ij) + (0.125) * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j) + (0.125) * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i / (h_j * sqrt_h_j * sqrt_l_ij) + (0.25) * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) * sqrt_h_i / (l_ij * sqrt_h_j * sqrt_l_ij);
        mj_eta_ij += (1.0 / 12.0) * E12 * _cF3 * sqrt_h_i / (sqrt_h_j * sqrt_l_ij * sqrt_l_ik) + (1.0 / 12.0) * E13 * _cF3 * (h_i * h_i) * sqrt_h_i / (l_ij * sqrt_h_j * sqrt_l_ij * sqrt_l_ik) + (1.0 / 12.0) * E3 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) + (0.0625) * M_SQRT2 * FTilde12 * _cF3 * h_i / (l_ij * sqrt_l_ik) + (0.0625) * M_SQRT2 * FTilde12 * _cF3 * l_ij / (h_i * sqrt_l_ik) + (0.0625) * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / ((l_ij * l_ij) * sqrt_l_ij) + (0.0625) * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_j / (sqrt_h_i * sqrt_l_ij);
        mj_eta_ij += (4.0 / 15.0) * E3 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j * h_j) * l_ik) + (5.0 / 12.0) * E3 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j * sqrt_l_ik) + (0.375) * M_SQRT2 * F * _cF3 * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j) + (1.0 / 48.0) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) / ((l_ij * l_ij) * sqrt_l_ik) + (1.0 / 24.0) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) / ((h_j * h_j) * sqrt_l_ik) + (5.0 / 24.0) * M_SQRT2 * F13 * _cF3 * h_i / ((h_j * h_j) * sqrt_l_ik) + (0.375) * M_SQRT2 * FTilde3 * _cF3 * h_i * sqrt_h_i / (h_j * sqrt_h_j * sqrt_l_ij);
        mj_eta_ij += (7.0 / 30.0) * E1 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * l_ik) + (11.0 / 120.0) * E1 * _cF3 * h_i * l_ij / ((h_j * h_j) * l_ik) + (7.0 / 30.0) * E13 * _cF3 * (h_i * h_i * h_i) * l_ij / ((h_j * h_j * h_j) * l_ik) + M_SQRT2 * F * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * sqrt_l_ik) - M_SQRT2 * F13 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j * h_j) * sqrt_l_ik) - 11.0 / 120.0 * M_SQRT2 * F13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j) + M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i * h_i) * l_ij / ((h_j * h_j * h_j) * sqrt_l_ik);
        mj_eta_ij += -7.0 / 30.0 * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * l_ik * sqrt_h_j) - 0.225 * M_SQRT2 * FTilde12 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j) - 7.0 / 30.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * l_ik * sqrt_h_j) - 0.225 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j) - 7.0 / 60.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j) - 8.0 / 15.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j * h_j) * l_ik * sqrt_h_j) - 7.0 / 60.0 * M_SQRT2 * F13 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j);
        mj_eta_ij += -0.5 * M_SQRT2 * F * _cF3 * (h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * l_ik * sqrt_h_j) - 0.375 * M_SQRT2 * F * _cF3 * h_i * l_ij / ((h_j * h_j) * sqrt_l_ik) - 2.0 / 15.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * sqrt_h_i / (l_ik * sqrt_h_j * sqrt_l_ij) - 2.0 / 15.0 * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) - 1.0 / 3.0 * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i * h_i) / (h_j * l_ij * sqrt_l_ik) - 0.5 * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * l_ik * sqrt_h_j) - 0.25 * M_SQRT2 * FTilde3 * _cF3 * h_i * l_ij / (h_j * sqrt_l_ik);
        mj_eta_ij += -0.05 * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_h_j / (l_ij * l_ik * sqrt_l_ij) - 0.05 * M_SQRT2 * FTilde12 * _cF3 * l_ij * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j) - 0.05 * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / l_ik - 1.0 / 12.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i * h_i) / (h_j * l_ij * sqrt_l_ik) - 0.05 * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij) - 1.0 / 6.0 * M_SQRT2 * FTilde123 * _cF3 * h_i * l_ij / (h_j * sqrt_l_ik) - 0.05 * M_SQRT2 * FTilde123 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i);
        mj_eta_ij += (0.25) * M_SQRT2 * F * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) + (0.25) * M_SQRT2 * F1 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) + (1.0 / 3.0) * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * sqrt_l_ik) + (1.0 / 3.0) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i * h_i) * l_ij / ((h_j * h_j * h_j) * sqrt_l_ik) - 0.05 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * sqrt_h_i / (l_ij * l_ik * sqrt_h_j * sqrt_l_ij) - 1.0 / 48.0 * M_SQRT2 * FTilde123 * _cF3 * h_i / (h_j * l_ij * sqrt_l_ik) + (0.25) * M_SQRT2 * FTilde3 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j);
        mj_eta_ij += (1.0 / 12.0) * M_SQRT2 * F * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) + (1.0 / 12.0) * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * h_j / ((l_ij * l_ij) * sqrt_l_ik) + (1.0 / 24.0) * M_SQRT2 * FTilde12 * _cF3 * h_i * l_ij / ((h_j * h_j) * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * FTilde123 * _cF3 * h_i * h_j / (l_ij * sqrt_l_ik) + (0.125) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) / (h_j * l_ij * sqrt_l_ik) + (1.0 / 6.0) * M_SQRT2 * F13 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i * h_i) * sqrt_h_i / (h_j * l_ik * sqrt_h_j * sqrt_l_ij);
        mj_eta_ij += (0.025) * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) + (1.0 / 60.0) * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) + (0.025) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i * h_i) * sqrt_h_i / (h_j * l_ik * sqrt_h_j * sqrt_l_ij) + (1.0 / 60.0) * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i / (h_j * l_ik * sqrt_h_j * sqrt_l_ij) + (0.025) * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * sqrt_h_i / (l_ij * l_ik * sqrt_h_j * sqrt_l_ij) + (0.15) * M_SQRT2 * F13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) + (0.025) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j);
        mj_eta_ij += (23.0 / 120.0) * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) + (23.0 / 120.0) * M_SQRT2 * FTilde123 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) + (4.0 / 3.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j * h_j) * sqrt_l_ik) + (13.0 / 120.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * sqrt_h_i / (h_j * l_ik * sqrt_h_j * sqrt_l_ij) + (43.0 / 60.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * l_ik * sqrt_h_j) + (13.0 / 120.0) * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j);
    }
}

void Z3_symmetrical::calc_mi_eta_ik() {
    if (!std::isnan(_kappa)) {
        mi_eta_ik = (0.5) * _kappa * eta_ij * (l_ij * l_ij) - 0.5 * _kappa * eta_ik * l_ij - 0.25 * _kappa * h_i * h_j + (0.5) * _kappa * l_ij * l_ik - 0.25 * _kappa * l_ij / l_ik;
        mi_eta_ik += (0.25) * _kappa * eta_ij * (h_j * h_j) + (0.25) * _kappa * (h_j * h_j) / l_ij + (0.75) * _kappa * h_j * mi + (0.25) * _kappa * (l_ij * l_ij * l_ij) / (l_ik * l_ik) + (0.25) * _kappa * h_j / h_i;
        mi_eta_ik += (0.5) * _kappa * eta_ik * l_ij * l_ik - 0.5 * _kappa * h_i * h_j / l_ik - 0.5 * _kappa * h_i * l_ij * mi + (0.5) * _kappa * h_j * l_ik * mi - 0.5 * E3 * _kappa * l_ij / E123;
        mi_eta_ik += (0.25) * E1 * _kappa * (h_j * h_j) / E123 - 0.5 * _kappa * (h_i * h_i) * l_ij / l_ik - 0.5 * _kappa * h_j * l_ij * mj - 0.25 * _kappa * h_j * (l_ij * l_ij) / h_i - 0.25 * _kappa * (h_j * h_j) * l_ij / (h_i * h_i);
        mi_eta_ik += (0.5) * _kappa * eta_ij * (h_i * h_i) * (l_ij * l_ij) / (l_ik * l_ik) + (0.25) * _kappa * (h_i * h_i) * l_ij / (l_ik * l_ik) + (0.5) * _kappa * h_i * h_j * (l_ij * l_ij) / (l_ik * l_ik) + (0.25) * _kappa * (h_j * h_j) * l_ik / l_ij + E13 * _kappa * h_i * l_ij / E123;
        mi_eta_ik += (0.5) * _kappa * h_i * (l_ij * l_ij * l_ij) * mi / (l_ik * l_ik) - 0.5 * E13 * _kappa * (h_j * h_j) * mj / E123 - 0.5 * E13 * _kappa * h_j * l_ik / E123 - 0.5 * E3 * _kappa * eta_ij * (l_ij * l_ij) / E123 - 0.5 * E3 * _kappa * l_ij * l_ik / E123;
        mi_eta_ik += -0.25 * _kappa * eta_ij * (h_j * h_j) * (l_ij * l_ij) / (h_i * h_i) - 0.5 * _kappa * eta_ik * (h_i * h_i) * l_ij / l_ik - 0.5 * _kappa * (h_i * h_i) * h_j * mi / l_ik - 0.5 * _kappa * h_i * l_ij * mi / l_ik - 0.25 * E3 * _kappa * h_i * h_j / E123;
        mi_eta_ik += (0.25) * _kappa * eta_ij * h_j * l_ij / h_i + (0.25) * _kappa * eta_ik * h_j * l_ik / h_i - 0.25 * _kappa * h_j * l_ij * mj / l_ik - 0.25 * _kappa * (h_j * h_j) * l_ij * mi / h_i - 0.25 * _kappa * (h_j * h_j) * l_ij * l_ik / (h_i * h_i);
        mi_eta_ik += (0.25) * _kappa * eta_ik * (h_j * h_j) * l_ik / l_ij + (0.25) * _kappa * h_i * (h_j * h_j) * mi / l_ij + (0.25) * _kappa * h_j * (l_ij * l_ij * l_ij) * mj / (l_ik * l_ik) + E13 * _kappa * eta_ik * h_i * l_ij / E123 + E13 * _kappa * h_i * l_ij / (E123 * l_ik);
        mi_eta_ik += (0.5) * E1 * _kappa * h_j * l_ij * mi / E123 + (0.5) * E1 * _kappa * h_j * l_ij / (E123 * h_i) + (0.5) * E13 * _kappa * eta_ij * h_j * l_ij / E123 + (0.5) * E13 * _kappa * (h_i * h_i) * h_j / (E123 * l_ik) + (0.5) * E13 * _kappa * h_i * h_j * mi / E123;
        mi_eta_ik += -0.5 * E12 * _kappa * h_i * (l_ij * l_ij) / (E123 * l_ik) - 0.5 * E12 * _kappa * h_i * (l_ij * l_ij) / (E123 * (l_ik * l_ik)) - 0.5 * E13 * _kappa * eta_ik * h_j * l_ik / E123 + (0.5) * E13 * _kappa * h_j * (l_ij * l_ij) / (E123 * l_ik) - 0.5 * E3 * _kappa * eta_ik * l_ij * l_ik / E123;
        mi_eta_ik += -0.5 * _kappa * eta_ij * h_i * h_j * l_ij / l_ik - 0.5 * _kappa * eta_ij * h_j * l_ij * l_ik / h_i - 0.5 * E3 * _kappa * h_i * l_ij * mi / E123 - 0.5 * E3 * _kappa * h_j * l_ij * mj / E123 - 0.5 * E3 * _kappa * h_j * l_ik * mi / E123;
        mi_eta_ik += -0.25 * E12 * _kappa * h_j * (l_ij * l_ij * l_ij) / (E123 * (l_ik * l_ik)) - 0.25 * E12 * _kappa * h_j * l_ij / (E123 * l_ik) - 0.25 * E13 * _kappa * h_i * (h_j * h_j) / (E123 * l_ij) - 0.25 * E13 * _kappa * (h_j * h_j) * l_ij / (E123 * h_i) - 0.25 * E3 * _kappa * h_j * l_ik / (E123 * h_i);
        mi_eta_ik += (0.25) * E1 * _kappa * (h_j * h_j) * (l_ij * l_ij) / (E123 * (h_i * h_i)) + (0.25) * E1 * _kappa * (h_j * h_j) * l_ik / (E123 * (h_i * h_i)) - 0.25 * _kappa * eta_ik * (h_j * h_j) * l_ij * l_ik / (h_i * h_i) + (0.25) * _kappa * (h_i * h_i) * h_j * l_ij * mj / (l_ik * l_ik) - 0.25 * E3 * _kappa * h_j * (l_ij * l_ij) / (E123 * h_i);
        mi_eta_ik += (0.5) * E1 * _kappa * eta_ij * h_j * (l_ij * l_ij) / (E123 * h_i) + (0.5) * E1 * _kappa * (h_j * h_j) * l_ij * mj / (E123 * h_i) + (0.5) * E1 * _kappa * h_j * l_ij * l_ik / (E123 * h_i) + E13 * _kappa * eta_ij * h_i * (l_ij * l_ij) / (E123 * l_ik) + E13 * _kappa * (h_i * h_i) * l_ij * mi / (E123 * l_ik);
        mi_eta_ik += (0.5) * E1 * _kappa * (h_j * h_j) * l_ik * mi / (E123 * h_i) - 0.5 * E12 * _kappa * eta_ij * h_i * (l_ij * l_ij * l_ij) / (E123 * (l_ik * l_ik)) - 0.5 * E12 * _kappa * eta_ij * h_j * (l_ij * l_ij) / (E123 * l_ik) - 0.5 * E12 * _kappa * eta_ik * h_i * (l_ij * l_ij) / (E123 * l_ik) - 0.5 * E12 * _kappa * (h_i * h_i) * (l_ij * l_ij) * mi / (E123 * (l_ik * l_ik));
        mi_eta_ik += -0.25 * E12 * _kappa * (h_i * h_i) * h_j * l_ij / (E123 * (l_ik * l_ik)) - 0.5 * E13 * _kappa * eta_ij * (h_j * h_j) * l_ik / (E123 * h_i) + E13 * _kappa * h_i * h_j * l_ij * mj / (E123 * l_ik) - 0.5 * E13 * _kappa * (h_j * h_j) * l_ik * mi / (E123 * l_ij) - 0.25 * E13 * _kappa * (h_j * h_j) * l_ik / (E123 * h_i * l_ij);
        mi_eta_ik += (0.5) * E1 * _kappa * eta_ij * (h_j * h_j) * l_ij * l_ik / (E123 * (h_i * h_i)) + (0.5) * E1 * _kappa * eta_ik * h_j * l_ij * l_ik / (E123 * h_i) - 0.5 * E12 * _kappa * h_i * h_j * (l_ij * l_ij) * mj / (E123 * (l_ik * l_ik)) - 0.5 * E12 * _kappa * h_i * h_j * l_ij * mi / (E123 * l_ik) - 0.5 * E3 * _kappa * eta_ij * h_j * l_ij * l_ik / (E123 * h_i);
    } else if (abs(h_i - h_j) <= 1e-6) {
        mi_eta_ik = mj_eta_ij;
    } else {
        mi_eta_ik = (0.125) * E3 * _cF3 / h_i + (1.0 / 48.0) * h_i / l_ik + (1.0 / 60.0) * h_i / (l_ik * l_ik) - 0.15 * h_j * l_ij / (l_ik * l_ik) - 0.5 * l_ij / h_j - 1.0 / 30.0 * l_ij / (h_j * (l_ik * l_ik)) + (0.125) / (h_i * l_ik);
        mi_eta_ik += (0.03125) * E13 * _cF3 / l_ik - 7.0 / 60.0 * (h_i * h_i) * (l_ij * l_ij * l_ij) / ((h_j * h_j * h_j) * (l_ik * l_ik)) + (0.125) * h_j / (l_ij * l_ik) + (23.0 / 240.0) * (l_ij * l_ij * l_ij) / (h_j * (l_ik * l_ik)) + (25.0 / 48.0) * l_ij / (h_j * l_ik) + (1.0 / 48.0) * (l_ij * l_ij) / (h_i * l_ik) + (1.0 / 60.0) * (l_ij * l_ij) / (h_i * (l_ik * l_ik));
        mi_eta_ik += -0.09375 * E1 * _cF3 * h_j / l_ik - 5.0 / 12.0 * h_i * (l_ij * l_ij) / ((h_j * h_j) * l_ik) - 0.125 * (l_ij * l_ij) * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j * sqrt_l_ik) - 0.125 * sqrt_l_ij / (sqrt_h_i * sqrt_h_j * sqrt_l_ik) - 0.375 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) - 0.125 * l_ij * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i * sqrt_l_ik) - 0.125 * h_j * l_ij / ((h_i * h_i) * l_ik);
        mi_eta_ik += -1.0 / 48.0 * E * _cF3 * l_ij / l_ik - 1.0 / 48.0 * E12 * _cF3 * l_ij / l_ik - 0.025 * (h_i * h_i) * h_j / (l_ij * (l_ik * l_ik)) - 1.0 / 24.0 * h_i * h_j * sqrt_h_i * sqrt_h_j / (l_ij * l_ik * sqrt_l_ij * sqrt_l_ik) - 1.0 / 24.0 * h_i * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) - 1.0 / 24.0 * l_ij * sqrt_h_j * sqrt_l_ij / (h_i * l_ik * sqrt_h_i * sqrt_l_ik) - 0.025 * h_j * (l_ij * l_ij * l_ij) / ((h_i * h_i) * (l_ik * l_ik));
        mi_eta_ik += -1.0 / 60.0 * E12 * _cF3 * l_ij / (l_ik * l_ik) - 1.0 / 96.0 * E3 * _cF3 * h_i / l_ik + (0.125) * E3 * _cF3 * h_j / l_ij + (0.25) * E3 * _cF3 * l_ij / h_j - 1.0 / 48.0 * M_SQRT2 * FTilde123 * _cF3 / (l_ik * sqrt_l_ik) + (0.125) * M_SQRT2 * FTilde3 * _cF3 / sqrt_l_ik + (1.0 / 6.0) * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j * sqrt_l_ik);
        mi_eta_ik += (0.00625) * E13 * _cF3 * (h_i * h_i) / (l_ik * l_ik) + (0.01875) * E13 * _cF3 * (l_ij * l_ij) / (l_ik * l_ik) + (0.1875) * M_SQRT2 * FTilde123 * _cF3 / sqrt_l_ik + (0.125) * sqrt_h_i * sqrt_h_j / (sqrt_l_ij * sqrt_l_ik) + (0.125) * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij * sqrt_l_ik) + (1.0 / 24.0) * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j * sqrt_l_ik) + (1.0 / 24.0) * h_j * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / ((h_i * h_i) * l_ik * sqrt_h_i * sqrt_l_ik);
        mi_eta_ik += -23.0 / 480.0 * E3 * _cF3 * (l_ij * l_ij * l_ij) / (h_j * (l_ik * l_ik)) - 25.0 / 96.0 * E3 * _cF3 * l_ij / (h_j * l_ik) + (0.5) * M_SQRT2 * F1 * _cF3 * l_ij / sqrt_l_ik - 0.25 * M_SQRT2 * F13 * _cF3 * h_i / (l_ik * sqrt_l_ik) + (23.0 / 240.0) * (h_i * h_i) * l_ij / (h_j * (l_ik * l_ik)) + (43.0 / 240.0) * h_i * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik)) + (5.0 / 6.0) * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik);
        mi_eta_ik += -0.125 * E3 * _cF3 * h_j * l_ij / (h_i * h_i) - 0.125 * M_SQRT2 * F1 * _cF3 * l_ij / (l_ik * sqrt_l_ik) - 1.0 / 24.0 * M_SQRT2 * FTilde123 * _cF3 * (h_j * h_j) / (l_ik * sqrt_l_ik) - 0.0625 * M_SQRT2 * FTilde123 * _cF3 * (l_ij * l_ij) / (l_ik * sqrt_l_ik) - 0.0625 * M_SQRT2 * F13 * _cF3 / (h_i * sqrt_l_ik) - 1.0 / 24.0 * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) / (l_ik * sqrt_l_ik) - 0.125 * M_SQRT2 * FTilde3 * _cF3 * (l_ij * l_ij) / (l_ik * sqrt_l_ik);
        mi_eta_ik += (0.00625) * E1 * _cF3 * (l_ij * l_ij * l_ij) / (h_i * (l_ik * l_ik)) + (0.03125) * E1 * _cF3 * l_ij / (h_i * l_ik) + (0.05) * E12 * _cF3 * h_i * h_j / (l_ik * l_ik) - 1.0 / 96.0 * E3 * _cF3 * (l_ij * l_ij) / (h_i * l_ik) + (0.0625) * M_SQRT2 * FTilde12 * _cF3 * h_j / sqrt_l_ik - 1.0 / 48.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) / (l_ik * sqrt_l_ik) + (0.375) * M_SQRT2 * F13 * _cF3 * h_i / sqrt_l_ik;
        mi_eta_ik += -23.0 / 240.0 * E * _cF3 * h_i * (l_ij * l_ij) / (h_j * (l_ik * l_ik)) + (0.01875) * E1 * _cF3 * h_i * l_ij / (l_ik * l_ik) + (7.0 / 24.0) * E1 * _cF3 * (l_ij * l_ij) / (h_j * l_ik) + (29.0 / 480.0) * E1 * _cF3 * (l_ij * l_ij) / (h_j * (l_ik * l_ik)) - 23.0 / 240.0 * E12 * _cF3 * h_i * (l_ij * l_ij) / (h_j * (l_ik * l_ik)) - 23.0 / 480.0 * E3 * _cF3 * (h_i * h_i) * l_ij / (h_j * (l_ik * l_ik)) - 43.0 / 480.0 * E3 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik));
        mi_eta_ik += -7.0 / 120.0 * E1 * _cF3 * h_i * (l_ij * l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik)) - 0.1875 * E1 * _cF3 * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i * sqrt_l_ik) - 7.0 / 120.0 * E13 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik)) - 0.09375 * E13 * _cF3 * h_j * l_ij / (h_i * l_ik) - 5.0 / 12.0 * E3 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) - 5.0 / 48.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * l_ij / (l_ik * sqrt_l_ik) - 5.0 / 24.0 * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij * l_ij) / (h_j * l_ik * sqrt_l_ik);
        mi_eta_ik += -1.0 / 3.0 * E1 * _cF3 * l_ij * sqrt_l_ij / (sqrt_h_i * sqrt_h_j * sqrt_l_ik) - 1.0 / 3.0 * E13 * _cF3 * sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik) - 0.25 * M_SQRT2 * F * _cF3 * l_ij * sqrt_l_ij / (sqrt_h_i * sqrt_h_j) - 0.25 * M_SQRT2 * F * _cF3 * (l_ij * l_ij) / (h_j * l_ik * sqrt_l_ik) - 0.25 * M_SQRT2 * F13 * _cF3 * sqrt_h_i * sqrt_h_j / sqrt_l_ij - 0.5 * M_SQRT2 * F13 * _cF3 * sqrt_l_ij / (sqrt_h_i * sqrt_h_j) - 0.5 * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j);
        mi_eta_ik += -0.125 * M_SQRT2 * F * _cF3 * h_i * l_ij / (l_ik * sqrt_l_ik) - 0.125 * M_SQRT2 * F * _cF3 * h_j * sqrt_h_j / (sqrt_h_i * sqrt_l_ij) - 0.125 * M_SQRT2 * F * _cF3 * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i) - 0.125 * M_SQRT2 * F1 * _cF3 * h_i * h_j / (l_ik * sqrt_l_ik) - 0.125 * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_j / (sqrt_h_i * sqrt_l_ij) - 0.125 * M_SQRT2 * F13 * _cF3 * l_ij / (h_j * sqrt_l_ik) - 0.25 * M_SQRT2 * FTilde3 * _cF3 * sqrt_h_i * sqrt_l_ij / sqrt_h_j;
        mi_eta_ik += -0.0625 * E1 * _cF3 * h_j * sqrt_h_j / (sqrt_h_i * sqrt_l_ij * sqrt_l_ik) - 1.0 / 24.0 * E12 * _cF3 * h_j * l_ij * sqrt_h_j * sqrt_l_ij / (h_i * l_ik * sqrt_h_i * sqrt_l_ik) - 0.0625 * E13 * _cF3 * h_j * sqrt_h_i * sqrt_h_j / (l_ij * sqrt_l_ij * sqrt_l_ik) - 1.0 / 12.0 * E3 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j * sqrt_l_ik) - 0.0625 * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) / (h_j * l_ik * sqrt_l_ik) - 0.125 * M_SQRT2 * FTilde3 * _cF3 * h_j * sqrt_h_i * sqrt_h_j / (l_ij * sqrt_l_ij) - 0.125 * M_SQRT2 * FTilde3 * _cF3 * sqrt_h_j / (sqrt_h_i * sqrt_l_ij);
        mi_eta_ik += -1.0 / 48.0 * E1 * _cF3 * l_ij * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j * sqrt_l_ik) - 1.0 / 48.0 * E1 * _cF3 * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / (h_i * l_ik * sqrt_h_i * sqrt_l_ik) - 0.03125 * E1 * _cF3 * h_j * (l_ij * l_ij) / ((h_i * h_i) * l_ik) - 1.0 / 24.0 * E12 * _cF3 * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_l_ik) - 0.03125 * E13 * _cF3 * h_i * h_j / (l_ij * l_ik) - 1.0 / 48.0 * E13 * _cF3 * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) - 1.0 / 24.0 * M_SQRT2 * F * _cF3 * (l_ij * l_ij * l_ij) / (h_i * l_ik * sqrt_l_ik);
        mi_eta_ik += -1.0 / 48.0 * E13 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_l_ik) - 1.0 / 48.0 * E3 * _cF3 * sqrt_h_i * sqrt_h_j / (sqrt_l_ij * sqrt_l_ik) + (0.125) * M_SQRT2 * F * _cF3 * l_ij / (h_i * sqrt_l_ik) + (0.125) * M_SQRT2 * F * _cF3 * h_j * l_ij * sqrt_h_j * sqrt_l_ij / ((h_i * h_i) * sqrt_h_i) + (1.0 / 3.0) * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) / (h_j * sqrt_l_ik) - 1.0 / 48.0 * M_SQRT2 * FTilde12 * _cF3 * l_ij / (h_i * l_ik * sqrt_l_ik) + (0.25) * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i);
        mi_eta_ik += (1.0 / 12.0) * E * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) + (1.0 / 12.0) * E * _cF3 * sqrt_h_j * sqrt_l_ij / (sqrt_h_i * sqrt_l_ik) + (0.125) * M_SQRT2 * F1 * _cF3 * (h_j * h_j) / (l_ij * sqrt_l_ik) + (0.125) * M_SQRT2 * F1 * _cF3 * h_j / (h_i * sqrt_l_ik) + (0.125) * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i) + (0.125) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) / (h_i * sqrt_l_ik) + (0.125) * M_SQRT2 * FTilde3 * _cF3 * h_j * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i);
        mi_eta_ik += (1.0 / 12.0) * E1 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) + (0.0625) * E1 * _cF3 * h_j * l_ij * sqrt_h_j * sqrt_l_ij / ((h_i * h_i) * sqrt_h_i * sqrt_l_ik) + (1.0 / 12.0) * E12 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) + (1.0 / 12.0) * E13 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) + (0.0625) * E13 * _cF3 * sqrt_h_j / (sqrt_h_i * sqrt_l_ij * sqrt_l_ik) + (0.0625) * E13 * _cF3 * h_j * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i * sqrt_l_ik) + (0.0625) * E3 * _cF3 * (l_ij * l_ij) * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j * sqrt_l_ik);
        mi_eta_ik += (1.0 / 48.0) * E1 * _cF3 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_l_ik) + (1.0 / 24.0) * E12 * _cF3 * h_j * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij * sqrt_l_ik) + (0.05) * E12 * _cF3 * h_j * (l_ij * l_ij) / (h_i * (l_ik * l_ik)) + (1.0 / 48.0) * E13 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij * sqrt_l_ik) + (1.0 / 48.0) * E3 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) + (1.0 / 48.0) * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij * l_ij) / (h_i * l_ik * sqrt_l_ik) + (1.0 / 24.0) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) / (h_i * l_ik * sqrt_l_ik);
        mi_eta_ik += (7.0 / 24.0) * E13 * _cF3 * h_i * l_ij / (h_j * l_ik) + (5.0 / 24.0) * E3 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * l_ik) + (5.0 / 48.0) * E3 * _cF3 * sqrt_l_ij / (sqrt_h_i * sqrt_h_j * sqrt_l_ik) + (0.1875) * E3 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) + (5.0 / 48.0) * E3 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i * sqrt_l_ik) + (0.75) * M_SQRT2 * F * _cF3 * (l_ij * l_ij) / (h_j * sqrt_l_ik) + (0.1875) * M_SQRT2 * FTilde12 * _cF3 * l_ij / (h_i * sqrt_l_ik);
        mi_eta_ik += (29.0 / 480.0) * E13 * _cF3 * h_i * l_ij / (h_j * (l_ik * l_ik)) + (7.0 / 120.0) * E3 * _cF3 * (h_i * h_i) * (l_ij * l_ij * l_ij) / ((h_j * h_j * h_j) * (l_ik * l_ik)) + (0.5) * M_SQRT2 * F1 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 43.0 / 480.0 * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 43.0 / 480.0 * M_SQRT2 * FTilde123 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) + (7.0 / 48.0) * M_SQRT2 * F13 * _cF3 * l_ij / (h_j * l_ik * sqrt_l_ik) - 29.0 / 480.0 * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j);
        mi_eta_ik += -7.0 / 24.0 * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) - 7.0 / 24.0 * M_SQRT2 * FTilde123 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) - 7.0 / 60.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) - 13.0 / 48.0 * M_SQRT2 * F13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) - 5.0 / 12.0 * M_SQRT2 * F13 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j) - 11.0 / 24.0 * M_SQRT2 * F13 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * l_ik * sqrt_l_ik) - 13.0 / 48.0 * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j);
        mi_eta_ik += -0.5 * M_SQRT2 * F * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) - 0.5 * M_SQRT2 * F1 * _cF3 * h_i * (l_ij * l_ij) / (h_j * l_ik * sqrt_l_ik) - 0.5 * M_SQRT2 * F1 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) - 0.0375 * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik) - 0.15625 * M_SQRT2 * F13 * _cF3 * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j) - 0.5 * M_SQRT2 * FTilde3 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) - 0.25 * M_SQRT2 * FTilde3 * _cF3 * h_i * l_ij / (h_j * l_ik * sqrt_l_ik);
        mi_eta_ik += -1.0 / 6.0 * M_SQRT2 * F * _cF3 * h_j * (l_ij * l_ij) / ((h_i * h_i) * sqrt_l_ik) - 0.125 * M_SQRT2 * F1 * _cF3 * h_i * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik) - 0.125 * M_SQRT2 * F1 * _cF3 * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i) - 0.125 * M_SQRT2 * F1 * _cF3 * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i) - 0.125 * M_SQRT2 * F1 * _cF3 * (h_j * h_j) * l_ij / ((h_i * h_i) * sqrt_l_ik) - 0.125 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * l_ij / (h_j * l_ik * sqrt_l_ik) - 0.25 * M_SQRT2 * FTilde3 * _cF3 * h_j * l_ij / (h_i * sqrt_l_ik);
        mi_eta_ik += -1.0 / 12.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij * l_ij) / ((h_j * h_j) * l_ik * sqrt_l_ik) - 0.0625 * M_SQRT2 * FTilde12 * _cF3 * h_j * (l_ij * l_ij) / ((h_i * h_i) * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * l_ik * sqrt_l_ik) - 0.0625 * M_SQRT2 * FTilde123 * _cF3 * h_i * l_ij / (h_j * l_ik * sqrt_l_ik) - 0.0625 * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_j / (l_ik * sqrt_h_i * sqrt_l_ij) - 0.0625 * M_SQRT2 * FTilde123 * _cF3 * h_j * l_ij / (h_i * sqrt_l_ik) - 0.0625 * M_SQRT2 * F13 * _cF3 * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij);
        mi_eta_ik += -0.05 * M_SQRT2 * FTilde12 * _cF3 * h_i * h_j * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik) * sqrt_l_ij) - 0.05 * M_SQRT2 * FTilde12 * _cF3 * h_j * l_ij * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i) - 0.05 * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / (h_i * (l_ik * l_ik) * sqrt_h_i) - 0.05 * M_SQRT2 * FTilde123 * _cF3 * h_j * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik) - 0.05 * M_SQRT2 * FTilde123 * _cF3 * h_j * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / (h_i * (l_ik * l_ik) * sqrt_h_i) - 0.0625 * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (h_i * l_ik * sqrt_h_i) - 0.0625 * M_SQRT2 * F13 * _cF3 * (h_j * h_j) * (l_ij * l_ij) / ((h_i * h_i * h_i) * sqrt_l_ik);
        mi_eta_ik += -1.0 / 24.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * (h_j * h_j) / (l_ij * l_ik * sqrt_l_ik) - 0.00625 * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij * l_ij) * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i * sqrt_h_j) - 1.0 / 96.0 * M_SQRT2 * FTilde12 * _cF3 * l_ij * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j) - 1.0 / 24.0 * M_SQRT2 * FTilde123 * _cF3 * h_i * h_j / (l_ij * l_ik * sqrt_l_ik) - 1.0 / 120.0 * M_SQRT2 * FTilde123 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i) - 1.0 / 96.0 * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) - 1.0 / 48.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * h_j / (l_ij * l_ik * sqrt_l_ik);
        mi_eta_ik += (0.25) * M_SQRT2 * F * _cF3 * l_ij * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j) - 0.00625 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (1.0 / 3.0) * M_SQRT2 * FTilde123 * _cF3 * h_i * l_ij / (h_j * sqrt_l_ik) - 0.00625 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik) * sqrt_l_ij) + (1.0 / 6.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij * l_ij) / ((h_j * h_j * h_j) * l_ik * sqrt_l_ik) - 0.00625 * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / (h_i * (l_ik * l_ik) * sqrt_h_i) + (0.25) * M_SQRT2 * FTilde3 * _cF3 * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j);
        mi_eta_ik += (0.125) * M_SQRT2 * F * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (0.125) * M_SQRT2 * F * _cF3 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / l_ik + (0.125) * M_SQRT2 * F1 * _cF3 * h_j * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij) + (0.125) * M_SQRT2 * F1 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (0.125) * M_SQRT2 * F1 * _cF3 * h_j * (l_ij * l_ij) / (h_i * l_ik * sqrt_l_ik) + (0.125) * M_SQRT2 * F1 * _cF3 * h_j * l_ij * sqrt_h_j * sqrt_l_ij / (h_i * l_ik * sqrt_h_i) + (0.125) * M_SQRT2 * F13 * _cF3 * h_j * l_ij / ((h_i * h_i) * sqrt_l_ik);
        mi_eta_ik += (0.0625) * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_j * sqrt_l_ij / (h_i * l_ik * sqrt_h_i) + (0.0625) * M_SQRT2 * FTilde123 * _cF3 * h_i * h_j / (l_ij * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * FTilde123 * _cF3 * h_j * l_ij / (h_i * l_ik * sqrt_l_ik) + (0.0625) * M_SQRT2 * F13 * _cF3 * h_i * (h_j * h_j) / ((l_ij * l_ij) * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * FTilde3 * _cF3 * h_i * h_j / (l_ij * sqrt_l_ik) + (0.125) * M_SQRT2 * FTilde3 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (0.125) * M_SQRT2 * FTilde3 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i);
        mi_eta_ik += (1.0 / 24.0) * M_SQRT2 * F * _cF3 * (l_ij * l_ij * l_ij) * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i * sqrt_h_j) + (1.0 / 24.0) * M_SQRT2 * F * _cF3 * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / (h_i * l_ik * sqrt_h_i) + (1.0 / 24.0) * M_SQRT2 * FTilde12 * _cF3 * (h_j * h_j) * l_ij / (h_i * l_ik * sqrt_l_ik) + (1.0 / 24.0) * M_SQRT2 * FTilde12 * _cF3 * h_j * (l_ij * l_ij) / ((h_i * h_i) * l_ik * sqrt_l_ik) + (1.0 / 24.0) * M_SQRT2 * FTilde123 * _cF3 * (h_j * h_j) * (l_ij * l_ij) / ((h_i * h_i) * l_ik * sqrt_l_ik) + (1.0 / 24.0) * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (1.0 / 24.0) * M_SQRT2 * FTilde3 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij);
        mi_eta_ik += (1.0 / 60.0) * M_SQRT2 * FTilde12 * _cF3 * l_ij * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i * sqrt_h_j) + (0.03125) * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / (h_i * l_ik * sqrt_h_i) + (0.03125) * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij) + (1.0 / 60.0) * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (0.03125) * M_SQRT2 * F13 * _cF3 * h_i * h_j * sqrt_h_i * sqrt_h_j / (l_ij * l_ik * sqrt_l_ij) + (1.0 / 48.0) * M_SQRT2 * F13 * _cF3 * h_j * (l_ij * l_ij * l_ij) / ((h_i * h_i) * l_ik * sqrt_l_ik) + (0.03125) * M_SQRT2 * F13 * _cF3 * h_j * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / ((h_i * h_i) * l_ik * sqrt_h_i);
        mi_eta_ik += (7.0 / 120.0) * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) + (7.0 / 60.0) * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik) + (7.0 / 120.0) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) + (0.075) * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik) * sqrt_l_ij) + (5.0 / 6.0) * M_SQRT2 * F13 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * sqrt_l_ik) + (0.1875) * M_SQRT2 * F13 * _cF3 * h_j * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i) + (0.75) * M_SQRT2 * FTilde3 * _cF3 * h_i * l_ij / (h_j * sqrt_l_ik);
        mi_eta_ik += (11.0 / 96.0) * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / l_ik + (11.0 / 96.0) * M_SQRT2 * FTilde123 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i) + (11.0 / 240.0) * M_SQRT2 * F13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (0.2375) * M_SQRT2 * F13 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) + (11.0 / 240.0) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i * sqrt_h_j) + (37.0 / 240.0) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) + (35.0 / 48.0) * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j);
        mi_eta_ik += (37.0 / 480.0) * M_SQRT2 * FTilde12 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (37.0 / 480.0) * M_SQRT2 * FTilde123 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (37.0 / 240.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j);
    }
}

void Z3_symmetrical::calc_mj_eta_ik() {
    if (!std::isnan(_kappa)) {
        mj_eta_ik = (0.5) * (_kappa * _kappa) * (h_i * h_i * h_i) * l_ij - 0.25 * (_kappa * _kappa) * (h_i * h_i) * h_j + (0.5) * (_kappa * _kappa) * h_i * (l_ij * l_ij * l_ij) + (0.5) * (_kappa * _kappa) * h_i * l_ij + (0.5) * (_kappa * _kappa) * h_j * (l_ik * l_ik);
        mj_eta_ik += -(_kappa * _kappa) * (h_i * h_i) * h_j * l_ik - 0.5 * (_kappa * _kappa) * h_i * l_ij * l_ik - (_kappa * _kappa) * h_j * (l_ij * l_ij) * l_ik - 0.25 * (_kappa * _kappa) * h_j * (l_ij * l_ij) + (0.25) * (_kappa * _kappa) * h_j * l_ik;
        mj_eta_ik += -0.25 * M_SQRT2 * F13 * _cF3 * (_kappa * _kappa) * h_j * l_ik * sqrt_l_ik + (0.5) * (_kappa * _kappa) * h_i * (h_j * h_j) * (l_ik * l_ik) / l_ij + (0.25) * (_kappa * _kappa) * h_i * (h_j * h_j) * l_ik / l_ij + (0.5) * (_kappa * _kappa) * (h_j * h_j) * l_ij * (l_ik * l_ik) / h_i + (0.25) * (_kappa * _kappa) * (h_j * h_j) * l_ij * l_ik / h_i;
        mj_eta_ik += -0.25 * E1 * _cF3 * (_kappa * _kappa) * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij * sqrt_l_ik - 0.25 * E12 * _cF3 * (_kappa * _kappa) * h_j * sqrt_h_i * sqrt_h_j * sqrt_l_ij * sqrt_l_ik - 0.25 * E13 * _cF3 * (_kappa * _kappa) * h_i * sqrt_h_i * sqrt_h_j * sqrt_l_ij * sqrt_l_ik + (0.5) * M_SQRT2 * F13 * _cF3 * (_kappa * _kappa) * h_i * l_ij * l_ik * sqrt_l_ik - 0.5 * M_SQRT2 * F13 * _cF3 * (_kappa * _kappa) * h_i * l_ij * sqrt_l_ik;
        mj_eta_ik += (0.25) * E1 * _cF3 * (_kappa * _kappa) * h_j * l_ik * sqrt_h_j * sqrt_l_ij * sqrt_l_ik / sqrt_h_i + (0.25) * E12 * _cF3 * (_kappa * _kappa) * h_i * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij / sqrt_l_ik - 0.25 * E3 * _cF3 * (_kappa * _kappa) * l_ik * sqrt_h_i * sqrt_h_j * sqrt_l_ij * sqrt_l_ik - 0.25 * M_SQRT2 * FTilde12 * _cF3 * (_kappa * _kappa) * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij - 0.25 * M_SQRT2 * FTilde123 * _cF3 * (_kappa * _kappa) * h_i * sqrt_h_i * sqrt_h_j * sqrt_l_ij;
        mj_eta_ik += (0.25) * E13 * _cF3 * (_kappa * _kappa) * h_j * l_ik * sqrt_h_i * sqrt_h_j * sqrt_l_ik / sqrt_l_ij + (0.25) * E3 * _cF3 * (_kappa * _kappa) * h_i * l_ij * sqrt_h_i * sqrt_l_ij * sqrt_l_ik / sqrt_h_j + (0.25) * M_SQRT2 * F13 * _cF3 * (_kappa * _kappa) * (h_i * h_i) * h_j * sqrt_l_ik + (0.25) * M_SQRT2 * F13 * _cF3 * (_kappa * _kappa) * h_j * (l_ij * l_ij) * sqrt_l_ik + (0.25) * M_SQRT2 * FTilde12 * _cF3 * (_kappa * _kappa) * h_i * h_j * sqrt_h_i * sqrt_h_j * sqrt_l_ij;
        mj_eta_ik += (0.375) * E123 * _cF3 * (_kappa * _kappa) * sqrt_h_i * sqrt_h_j * sqrt_l_ij * sqrt_l_ik - 0.5 * M_SQRT2 * F13 * _cF3 * (_kappa * _kappa) * (h_i * h_i) * (l_ij * l_ij) * sqrt_l_ik / h_j - 0.25 * M_SQRT2 * F13 * _cF3 * (_kappa * _kappa) * h_i * (h_j * h_j) * l_ik * sqrt_l_ik / l_ij - 0.25 * M_SQRT2 * F13 * _cF3 * (_kappa * _kappa) * (h_j * h_j) * l_ij * l_ik * sqrt_l_ik / h_i + (0.25) * M_SQRT2 * FTilde123 * _cF3 * (_kappa * _kappa) * h_j * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij;
        mj_eta_ik += -0.25 * M_SQRT2 * FTilde12 * _cF3 * (_kappa * _kappa) * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij / l_ik - 0.25 * M_SQRT2 * FTilde12 * _cF3 * (_kappa * _kappa) * h_j * (l_ik * l_ik) * sqrt_h_j * sqrt_l_ij / sqrt_h_i - 0.125 * M_SQRT2 * FTilde12 * _cF3 * (_kappa * _kappa) * h_j * l_ik * sqrt_h_j * sqrt_l_ij / sqrt_h_i - 0.25 * M_SQRT2 * FTilde123 * _cF3 * (_kappa * _kappa) * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_h_j * sqrt_l_ij / l_ik - 0.25 * M_SQRT2 * FTilde123 * _cF3 * (_kappa * _kappa) * h_j * (l_ik * l_ik) * sqrt_h_i * sqrt_h_j / sqrt_l_ij;
        mj_eta_ik += (0.25) * M_SQRT2 * FTilde12 * _cF3 * (_kappa * _kappa) * l_ij * l_ik * sqrt_h_i * sqrt_h_j * sqrt_l_ij + (0.25) * M_SQRT2 * FTilde123 * _cF3 * (_kappa * _kappa) * h_i * l_ik * sqrt_h_i * sqrt_h_j * sqrt_l_ij - 0.125 * M_SQRT2 * FTilde123 * _cF3 * (_kappa * _kappa) * h_j * l_ik * sqrt_h_i * sqrt_h_j / sqrt_l_ij;
    } else if (abs(h_i - h_j) <= 1e-6) {
        mj_eta_ik = mj_eta_ij;
    } else {
        mj_eta_ik = (0.25) * E3 * _cF3 / h_j - 1.0 / 24.0 * (h_i * h_i) / (h_j * l_ik) - 1.0 / 30.0 * (h_i * h_i) / (h_j * (l_ik * l_ik)) + h_i * l_ij / (h_j * h_j) - 1.0 / 24.0 * (l_ij * l_ij) / (h_j * l_ik) - 1.0 / 30.0 * (l_ij * l_ij) / (h_j * (l_ik * l_ik)) + (0.25) / (h_j * l_ik);
        mj_eta_ik += (0.05) * (h_i * h_i * h_i) / (l_ij * (l_ik * l_ik)) - 43.0 / 120.0 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * (l_ik * l_ik)) + (0.3) * h_i * l_ij / (l_ik * l_ik) + (0.25) * h_i / (l_ij * l_ik) - 25.0 / 24.0 * h_i * l_ij / ((h_j * h_j) * l_ik) + (0.05) * (l_ij * l_ij * l_ij) / (h_i * (l_ik * l_ik)) + (0.25) * l_ij / (h_i * l_ik);
        mj_eta_ik += -0.1 * E12 * _cF3 * (h_i * h_i) / (l_ik * l_ik) - 23.0 / 120.0 * (h_i * h_i * h_i) * l_ij / ((h_j * h_j) * (l_ik * l_ik)) - 1.0 / 3.0 * (h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * l_ik * sqrt_h_j * sqrt_l_ik) - 23.0 / 120.0 * h_i * (l_ij * l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik)) - 5.0 / 3.0 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j * sqrt_l_ik) - 1.0 / 6.0 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_l_ik) - 0.25 * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik);
        mj_eta_ik += -0.1 * E12 * _cF3 * (l_ij * l_ij) / (l_ik * l_ik) + (0.25) * E3 * _cF3 * h_i / l_ij + (0.25) * E3 * _cF3 * l_ij / h_i - 1.0 / 12.0 * (h_i * h_i) * sqrt_h_i * sqrt_h_j / (l_ij * l_ik * sqrt_l_ij * sqrt_l_ik) - 1.0 / 12.0 * h_i * sqrt_h_i / (l_ik * sqrt_h_j * sqrt_l_ij * sqrt_l_ik) - 1.0 / 12.0 * l_ij * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j * sqrt_l_ik) - 1.0 / 12.0 * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / (h_i * l_ik * sqrt_h_i * sqrt_l_ik);
        mj_eta_ik += (0.25) * M_SQRT2 * F1 * _cF3 / sqrt_l_ik + (0.25) * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) + (0.25) * h_i * sqrt_h_i / (sqrt_h_j * sqrt_l_ij * sqrt_l_ik) + (1.0 / 15.0) * h_i * l_ij / ((h_j * h_j) * (l_ik * l_ik)) + (0.25) * l_ij * sqrt_l_ij / (sqrt_h_i * sqrt_h_j * sqrt_l_ik) + (0.25) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) + (0.75) * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik);
        mj_eta_ik += (0.1875) * E1 * _cF3 * h_i / l_ik + (0.1875) * E13 * _cF3 * l_ij / l_ik + (0.5) * M_SQRT2 * F * _cF3 * h_i / sqrt_l_ik + (0.5) * M_SQRT2 * FTilde3 * _cF3 * l_ij / sqrt_l_ik + (7.0 / 30.0) * (h_i * h_i * h_i) * (l_ij * l_ij * l_ij) / ((h_j * h_j * h_j * h_j) * (l_ik * l_ik)) + (5.0 / 6.0) * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * l_ik) + (11.0 / 12.0) * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j * sqrt_l_ik);
        mj_eta_ik += -0.0625 * E1 * _cF3 * l_ij / (h_j * l_ik) - 0.5 * E3 * _cF3 * h_i * l_ij / (h_j * h_j) - 0.25 * M_SQRT2 * F1 * _cF3 * (h_i * h_i) / (l_ik * sqrt_l_ik) - 0.25 * M_SQRT2 * F1 * _cF3 * (l_ij * l_ij) / (l_ik * sqrt_l_ik) - 1.0 / 3.0 * M_SQRT2 * FTilde12 * _cF3 * h_i / (l_ik * sqrt_l_ik) - 1.0 / 3.0 * M_SQRT2 * FTilde123 * _cF3 * l_ij / (l_ik * sqrt_l_ik) - 0.125 * M_SQRT2 * F13 * _cF3 / (h_j * sqrt_l_ik);
        mj_eta_ik += -0.0125 * E1 * _cF3 * (l_ij * l_ij * l_ij) / (h_j * (l_ik * l_ik)) + (0.0625) * E1 * _cF3 * (l_ij * l_ij) / (h_i * l_ik) - 0.0125 * E13 * _cF3 * (h_i * h_i * h_i) / (h_j * (l_ik * l_ik)) - 0.0625 * E13 * _cF3 * h_i / (h_j * l_ik) + (0.125) * M_SQRT2 * FTilde12 * _cF3 * h_i / sqrt_l_ik + (0.125) * M_SQRT2 * FTilde123 * _cF3 * l_ij / sqrt_l_ik + (0.25) * M_SQRT2 * F13 * _cF3 * h_j / sqrt_l_ik;
        mj_eta_ik += -29.0 / 240.0 * E1 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik)) + (0.0625) * E13 * _cF3 * (h_i * h_i) / (l_ij * l_ik) + (1.0 / 48.0) * E3 * _cF3 * (h_i * h_i) / (h_j * l_ik) + (1.0 / 48.0) * E3 * _cF3 * (l_ij * l_ij) / (h_j * l_ik) + (0.5) * M_SQRT2 * F * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j) + M_SQRT2 * F13 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j) + (0.5) * M_SQRT2 * FTilde3 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j);
        mj_eta_ik += -7.0 / 12.0 * E1 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * l_ik) - 7.0 / 12.0 * E13 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j) * l_ik) - 29.0 / 240.0 * E13 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j) * (l_ik * l_ik)) - 7.0 / 60.0 * E3 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij * l_ij) / ((h_j * h_j * h_j * h_j) * (l_ik * l_ik)) - 5.0 / 12.0 * E3 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * l_ik) - 11.0 / 24.0 * E3 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j * sqrt_l_ik) - 11.0 / 24.0 * E3 * _cF3 * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik);
        mj_eta_ik += -0.0375 * E1 * _cF3 * (h_i * h_i) * l_ij / (h_j * (l_ik * l_ik)) - 0.0375 * E13 * _cF3 * h_i * (l_ij * l_ij) / (h_j * (l_ik * l_ik)) - 5.0 / 24.0 * E3 * _cF3 * h_i * sqrt_h_i / (sqrt_h_j * sqrt_l_ij * sqrt_l_ik) - 5.0 / 24.0 * E3 * _cF3 * l_ij * sqrt_l_ij / (sqrt_h_i * sqrt_h_j * sqrt_l_ik) - 0.25 * M_SQRT2 * F * _cF3 * sqrt_h_i * sqrt_h_j / sqrt_l_ij - 0.5 * M_SQRT2 * F13 * _cF3 * h_i * sqrt_h_i / (sqrt_h_j * sqrt_l_ij) - 0.5 * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_l_ij / (sqrt_h_i * sqrt_h_j);
        mj_eta_ik += -0.25 * M_SQRT2 * F * _cF3 * sqrt_l_ij / (sqrt_h_i * sqrt_h_j) - 0.25 * M_SQRT2 * F * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i) - 0.25 * M_SQRT2 * FTilde12 * _cF3 * sqrt_l_ij / (sqrt_h_i * sqrt_h_j) - 0.25 * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_i / (sqrt_h_j * sqrt_l_ij) - 0.25 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) / (h_j * sqrt_l_ik) - 0.25 * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) / (h_j * sqrt_l_ik) - 0.25 * M_SQRT2 * FTilde3 * _cF3 * sqrt_h_i / (sqrt_h_j * sqrt_l_ij);
        mj_eta_ik += -1.0 / 6.0 * E * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) - 1.0 / 6.0 * E * _cF3 * sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik) - 1.0 / 6.0 * E1 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j * sqrt_l_ik) - 1.0 / 6.0 * E12 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) - 1.0 / 6.0 * E13 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j * sqrt_l_ik) - 0.25 * M_SQRT2 * FTilde3 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / (l_ij * sqrt_l_ij) - 0.25 * M_SQRT2 * FTilde3 * _cF3 * sqrt_h_j * sqrt_l_ij / sqrt_h_i;
        mj_eta_ik += -0.125 * E1 * _cF3 * sqrt_h_i * sqrt_h_j / (sqrt_l_ij * sqrt_l_ik) - 0.125 * E1 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (h_i * sqrt_h_i * sqrt_l_ik) - 0.125 * E13 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / (l_ij * sqrt_l_ij * sqrt_l_ik) - 0.125 * E13 * _cF3 * sqrt_h_j * sqrt_l_ij / (sqrt_h_i * sqrt_l_ik) - 0.125 * E3 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) - 1.0 / 6.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) / (h_j * l_ik * sqrt_l_ik) - 1.0 / 6.0 * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) / (h_j * l_ik * sqrt_l_ik);
        mj_eta_ik += -0.125 * E3 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * FTilde12 * _cF3 * h_j * l_ij / (l_ik * sqrt_l_ik) - 0.125 * M_SQRT2 * FTilde12 * _cF3 * l_ij / (h_j * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) / (h_i * l_ik * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) / (l_ij * l_ik * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * FTilde123 * _cF3 * h_i * h_j / (l_ik * sqrt_l_ik) - 0.125 * M_SQRT2 * FTilde123 * _cF3 * h_i / (h_j * sqrt_l_ik);
        mj_eta_ik += (1.0 / 3.0) * M_SQRT2 * F * _cF3 * (l_ij * l_ij) / (h_i * sqrt_l_ik) - 1.0 / 24.0 * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij * l_ij) / (h_j * l_ik * sqrt_l_ik) - 1.0 / 24.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i * h_i) / (h_j * l_ik * sqrt_l_ik) - 1.0 / 24.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) / (l_ij * l_ik * sqrt_l_ik) - 1.0 / 12.0 * M_SQRT2 * F13 * _cF3 * h_i * l_ij / (l_ik * sqrt_l_ik) - 1.0 / 24.0 * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij * l_ij) / (h_i * l_ik * sqrt_l_ik) + (1.0 / 3.0) * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) / (l_ij * sqrt_l_ik);
        mj_eta_ik += (0.125) * E1 * _cF3 * sqrt_l_ij / (sqrt_h_i * sqrt_h_j * sqrt_l_ik) + (0.125) * E1 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) + (0.125) * E13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik) + (0.125) * E13 * _cF3 * sqrt_h_i / (sqrt_h_j * sqrt_l_ij * sqrt_l_ik) + (1.0 / 6.0) * E3 * _cF3 * (h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * l_ik * sqrt_h_j * sqrt_l_ik) + (0.25) * M_SQRT2 * F * _cF3 * l_ij / (h_j * sqrt_l_ik) + (0.25) * M_SQRT2 * FTilde3 * _cF3 * h_i / (h_j * sqrt_l_ik);
        mj_eta_ik += (1.0 / 12.0) * E12 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij * sqrt_l_ik) + (1.0 / 12.0) * E12 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * F * _cF3 * (l_ij * l_ij * l_ij) / (h_j * l_ik * sqrt_l_ik) + (0.125) * M_SQRT2 * FTilde12 * _cF3 * l_ij / (h_j * l_ik * sqrt_l_ik) + (0.125) * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) / (h_i * sqrt_l_ik) + (0.125) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) / (l_ij * sqrt_l_ik) + (0.125) * M_SQRT2 * FTilde123 * _cF3 * h_i / (h_j * l_ik * sqrt_l_ik);
        mj_eta_ik += (1.0 / 24.0) * E * _cF3 * h_i * l_ij / (h_j * l_ik) + (1.0 / 24.0) * E1 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) + (1.0 / 24.0) * E1 * _cF3 * (l_ij * l_ij) * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j * sqrt_l_ik) + (1.0 / 24.0) * E12 * _cF3 * h_i * l_ij / (h_j * l_ik) + (1.0 / 24.0) * E13 * _cF3 * (h_i * h_i) * sqrt_h_i / (l_ik * sqrt_h_j * sqrt_l_ij * sqrt_l_ik) + (1.0 / 24.0) * E13 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) + (1.0 / 12.0) * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i * h_i) / (h_j * l_ik * sqrt_l_ik);
        mj_eta_ik += (23.0 / 120.0) * E * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik)) + (7.0 / 60.0) * E1 * _cF3 * (h_i * h_i) * (l_ij * l_ij * l_ij) / ((h_j * h_j * h_j) * (l_ik * l_ik)) + (2.0 / 3.0) * E1 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) + (1.0 / 30.0) * E12 * _cF3 * h_i * l_ij / (h_j * (l_ik * l_ik)) + (7.0 / 60.0) * E13 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * (l_ik * l_ik)) + (2.0 / 3.0) * E13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * sqrt_h_j * sqrt_l_ik) + (5.0 / 6.0) * E3 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * sqrt_h_j * sqrt_l_ik);
        mj_eta_ik += (23.0 / 120.0) * E12 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik)) + (23.0 / 240.0) * E3 * _cF3 * (h_i * h_i * h_i) * l_ij / ((h_j * h_j) * (l_ik * l_ik)) + (43.0 / 240.0) * E3 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * (l_ik * l_ik)) + (23.0 / 240.0) * E3 * _cF3 * h_i * (l_ij * l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik)) + (25.0 / 48.0) * E3 * _cF3 * h_i * l_ij / ((h_j * h_j) * l_ik) + M_SQRT2 * F * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j) + M_SQRT2 * F1 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * l_ik * sqrt_l_ik);
        mj_eta_ik += (0.5) * M_SQRT2 * F * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * l_ik * sqrt_l_ik) - M_SQRT2 * F1 * _cF3 * (h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) - M_SQRT2 * F1 * _cF3 * h_i * l_ij / (h_j * sqrt_l_ik) + M_SQRT2 * F1 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) - 37.0 / 120.0 * M_SQRT2 * F13 * _cF3 * h_i * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) + M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j) + (0.5) * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j) * l_ik * sqrt_l_ik);
        mj_eta_ik += -37.0 / 240.0 * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 11.0 / 48.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) - 37.0 / 240.0 * M_SQRT2 * FTilde123 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 11.0 / 48.0 * M_SQRT2 * FTilde123 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) - 37.0 / 120.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) - 0.475 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) - 35.0 / 24.0 * M_SQRT2 * F13 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j);
        mj_eta_ik += -1.5 * M_SQRT2 * F * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * sqrt_l_ik) - 7.0 / 60.0 * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) - 7.0 / 60.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) - 11.0 / 120.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 5.0 / 3.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * sqrt_l_ik) - 11.0 / 120.0 * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 1.5 * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j) * sqrt_l_ik);
        mj_eta_ik += -0.5 * M_SQRT2 * F * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) - 2.0 / 3.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * sqrt_l_ik) - 2.0 / 3.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j) * sqrt_l_ik) - 1.0 / 3.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij * l_ij) / ((h_j * h_j * h_j * h_j) * l_ik * sqrt_l_ik) - 0.375 * M_SQRT2 * F13 * _cF3 * h_i * l_ij / ((h_j * h_j) * l_ik * sqrt_l_ik) - 0.375 * M_SQRT2 * F13 * _cF3 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / l_ik - 0.5 * M_SQRT2 * FTilde3 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j);
        mj_eta_ik += -0.25 * M_SQRT2 * F * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 0.25 * M_SQRT2 * F * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) - 0.25 * M_SQRT2 * F1 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij) - 0.25 * M_SQRT2 * F1 * _cF3 * h_i * l_ij / (h_j * l_ik * sqrt_l_ik) - 0.25 * M_SQRT2 * F1 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 0.25 * M_SQRT2 * F1 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i) - 0.25 * M_SQRT2 * FTilde3 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j);
        mj_eta_ik += -1.0 / 12.0 * M_SQRT2 * F * _cF3 * (l_ij * l_ij) * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j) - 1.0 / 12.0 * M_SQRT2 * F * _cF3 * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 1.0 / 12.0 * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * h_j / (l_ij * l_ik * sqrt_l_ik) - 0.125 * M_SQRT2 * FTilde12 * _cF3 * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j) - 0.125 * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_i / (l_ik * sqrt_h_j * sqrt_l_ij) - 1.0 / 12.0 * M_SQRT2 * FTilde123 * _cF3 * h_j * (l_ij * l_ij) / (h_i * l_ik * sqrt_l_ik) - 0.25 * M_SQRT2 * FTilde3 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j);
        mj_eta_ik += -0.0625 * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j) - 1.0 / 30.0 * M_SQRT2 * FTilde12 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 0.0625 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * sqrt_h_i / (l_ik * sqrt_h_j * sqrt_l_ij) - 0.0625 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_h_j / (l_ij * l_ik * sqrt_l_ij) - 0.0625 * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / (h_i * l_ik * sqrt_h_i) - 1.0 / 12.0 * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i * h_i) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 1.0 / 12.0 * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) * sqrt_h_i / (l_ik * sqrt_h_j * sqrt_l_ij);
        mj_eta_ik += (0.25) * M_SQRT2 * F * _cF3 * (h_i * h_i) * l_ij / (h_j * l_ik * sqrt_l_ik) + (0.25) * M_SQRT2 * F1 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (0.25) * M_SQRT2 * F1 * _cF3 * h_i * h_j / (l_ij * sqrt_l_ik) + (0.25) * M_SQRT2 * F1 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (0.25) * M_SQRT2 * F1 * _cF3 * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) + (0.25) * M_SQRT2 * F1 * _cF3 * h_j * l_ij / (h_i * sqrt_l_ik) - 1.0 / 30.0 * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j);
        mj_eta_ik += (0.125) * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * l_ij / (h_j * l_ik * sqrt_l_ik) + (1.0 / 6.0) * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * (l_ij * l_ij * l_ij) / ((h_j * h_j * h_j) * l_ik * sqrt_l_ik) + (1.0 / 6.0) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * l_ik * sqrt_l_ik) + (0.125) * M_SQRT2 * FTilde123 * _cF3 * h_i * (l_ij * l_ij) / (h_j * l_ik * sqrt_l_ik) + (0.125) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * h_j / ((l_ij * l_ij) * sqrt_l_ik) + (0.125) * M_SQRT2 * F13 * _cF3 * h_j * (l_ij * l_ij) / ((h_i * h_i) * sqrt_l_ik) + (0.25) * M_SQRT2 * FTilde3 * _cF3 * h_i * (l_ij * l_ij) / (h_j * l_ik * sqrt_l_ik);
        mj_eta_ik += (0.1) * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik) * sqrt_l_ij) + (0.1) * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i * sqrt_h_j) + (0.1) * M_SQRT2 * FTilde12 * _cF3 * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik) + (0.1) * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik) + (0.1) * M_SQRT2 * FTilde123 * _cF3 * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i) + (0.125) * M_SQRT2 * F13 * _cF3 * h_i * sqrt_h_i / (l_ik * sqrt_h_j * sqrt_l_ij) + (0.125) * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_h_j);
        mj_eta_ik += (1.0 / 24.0) * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij) / ((h_j * h_j) * l_ik * sqrt_l_ik) + (0.0125) * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) + (1.0 / 48.0) * M_SQRT2 * FTilde12 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) + (0.0125) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i * h_i) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) + (0.1) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * sqrt_h_i / ((l_ik * l_ik) * sqrt_h_j * sqrt_l_ij) + (1.0 / 24.0) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * l_ij / ((h_j * h_j) * l_ik * sqrt_l_ik) + (1.0 / 48.0) * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j);
        mj_eta_ik += (4.0 / 15.0) * M_SQRT2 * FTilde12 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (4.0 / 15.0) * M_SQRT2 * FTilde123 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (0.0125) * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * sqrt_h_i / ((l_ik * l_ik) * sqrt_h_j * sqrt_l_ij) + (5.0 / 6.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * l_ik * sqrt_h_j) + (0.075) * M_SQRT2 * F13 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (0.75) * M_SQRT2 * F13 * _cF3 * h_i * l_ij / ((h_j * h_j) * sqrt_l_ik) + (0.0125) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij * l_ij) * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i * sqrt_h_j);
        mj_eta_ik += (7.0 / 12.0) * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j) + (7.0 / 12.0) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * l_ik * sqrt_h_j) + (5.0 / 12.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * l_ij / ((h_j * h_j) * l_ik * sqrt_l_ik) + (7.0 / 30.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) + (13.0 / 12.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j * h_j) * l_ik * sqrt_l_ik) + (5.0 / 12.0) * M_SQRT2 * F13 * _cF3 * h_i * (l_ij * l_ij * l_ij) / ((h_j * h_j) * l_ik * sqrt_l_ik) + (0.3125) * M_SQRT2 * F13 * _cF3 * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j);
        mj_eta_ik += (43.0 / 240.0) * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) + (43.0 / 240.0) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) + (13.0 / 24.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) + (29.0 / 240.0) * M_SQRT2 * F13 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) + (13.0 / 24.0) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j);
    }
}

void Z3_symmetrical::calc_eta_ik2() {
    if (!std::isnan(_kappa)) {
        eta_ik2 = (1.5) * _kappa * eta_ik * h_j + (0.5) * _kappa * h_i * l_ij / (l_ik * l_ik) - _kappa * h_j * l_ik - 0.5 * _kappa * h_j / l_ik + (0.5) * E3 * _kappa * h_j / E123;
        eta_ik2 += (0.5) * _kappa * (h_i * h_i) * h_j / l_ik + (0.5) * _kappa * (h_i * h_i) * h_j / (l_ik * l_ik) + (0.5) * _kappa * h_i * (l_ij * l_ij * l_ij) / (l_ik * l_ik) + (0.5) * _kappa * h_j * (l_ij * l_ij) / l_ik + (0.5) * _kappa * h_j * (l_ij * l_ij) / (l_ik * l_ik);
        eta_ik2 += -_kappa * eta_ij * h_j * l_ij - _kappa * eta_ik * h_i * l_ij + (0.5) * _kappa * (h_i * h_i * h_i) * l_ij / (l_ik * l_ik) - _kappa * h_i * h_j * mi - 0.5 * _kappa * h_i * (l_ij * l_ij * l_ij) / (l_ik * l_ik * l_ik);
        eta_ik2 += _kappa * eta_ij * h_i * (l_ij * l_ij) / l_ik + (0.5) * _kappa * eta_ij * h_i * (l_ij * l_ij) / (l_ik * l_ik) - 0.5 * _kappa * (h_i * h_i * h_i) * l_ij / (l_ik * l_ik * l_ik) + _kappa * (h_i * h_i) * l_ij * mi / l_ik + E3 * _kappa * h_i * l_ij / E123;
        eta_ik2 += (0.5) * _kappa * eta_ij * h_j * (l_ij * l_ij * l_ij) / (l_ik * l_ik) + (0.5) * _kappa * eta_ik * (h_i * h_i * h_i) * l_ij / (l_ik * l_ik) + (0.5) * _kappa * eta_ik * h_i * (l_ij * l_ij * l_ij) / (l_ik * l_ik) + (0.5) * _kappa * (h_i * h_i * h_i) * h_j * mi / (l_ik * l_ik) + (0.5) * _kappa * (h_i * h_i) * l_ij * mi / (l_ik * l_ik);
        eta_ik2 += -_kappa * eta_ij * (h_i * h_i * h_i) * (l_ij * l_ij) / (l_ik * l_ik * l_ik) - _kappa * eta_ij * h_j * l_ij / l_ik - _kappa * eta_ik * h_i * l_ij / l_ik - _kappa * (h_i * h_i) * h_j * (l_ij * l_ij) / (l_ik * l_ik * l_ik) - _kappa * h_i * h_j * mi / l_ik;
        eta_ik2 += E12 * _kappa * (h_i * h_i) * (l_ij * l_ij) / (E123 * (l_ik * l_ik)) + E12 * _kappa * (h_i * h_i) * (l_ij * l_ij) / (E123 * (l_ik * l_ik * l_ik)) - _kappa * (h_i * h_i) * (l_ij * l_ij * l_ij) * mi / (l_ik * l_ik * l_ik) + E3 * _kappa * eta_ij * h_j * l_ij / E123 + E3 * _kappa * eta_ik * h_i * l_ij / E123;
        eta_ik2 += _kappa * h_i * h_j * l_ij * mj / l_ik + (0.5) * E3 * _kappa * (h_i * h_i) * h_j / (E123 * l_ik) + E3 * _kappa * h_i * h_j * mi / E123 + E3 * _kappa * h_i * l_ij / (E123 * l_ik) + (0.5) * E3 * _kappa * h_j * (l_ij * l_ij) / (E123 * l_ik);
        eta_ik2 += -E1 * _kappa * h_i * (l_ij * l_ij) / (E123 * l_ik) - E1 * _kappa * h_i * (l_ij * l_ij) / (E123 * (l_ik * l_ik)) + (0.5) * _kappa * eta_ij * (h_i * h_i) * h_j * l_ij / (l_ik * l_ik) + (0.5) * _kappa * h_i * h_j * (l_ij * l_ij) * mi / (l_ik * l_ik) + (0.5) * _kappa * h_i * h_j * l_ij * mj / (l_ik * l_ik);
        eta_ik2 += -0.5 * E1 * _kappa * h_j * (l_ij * l_ij * l_ij) / (E123 * (l_ik * l_ik)) - 0.5 * E1 * _kappa * h_j * l_ij / (E123 * l_ik) - E13 * _kappa * (h_i * h_i) * l_ij / (E123 * l_ik) - E13 * _kappa * (h_i * h_i) * l_ij / (E123 * (l_ik * l_ik)) - 0.5 * E13 * _kappa * h_i * h_j / (E123 * l_ik);
        eta_ik2 += E12 * _kappa * eta_ij * (h_i * h_i) * (l_ij * l_ij * l_ij) / (E123 * (l_ik * l_ik * l_ik)) + E12 * _kappa * eta_ik * (h_i * h_i) * (l_ij * l_ij) / (E123 * (l_ik * l_ik)) - 0.5 * _kappa * (h_i * h_i * h_i) * h_j * l_ij * mj / (l_ik * l_ik * l_ik) - 0.5 * _kappa * h_i * h_j * (l_ij * l_ij * l_ij) * mj / (l_ik * l_ik * l_ik) - 0.5 * E13 * _kappa * (h_i * h_i * h_i) * h_j / (E123 * (l_ik * l_ik));
        eta_ik2 += E12 * _kappa * (h_i * h_i * h_i) * (l_ij * l_ij) * mi / (E123 * (l_ik * l_ik * l_ik)) + (0.5) * E12 * _kappa * h_i * h_j * (l_ij * l_ij * l_ij) / (E123 * (l_ik * l_ik * l_ik)) + (0.5) * E12 * _kappa * h_i * h_j * l_ij / (E123 * (l_ik * l_ik)) + E3 * _kappa * eta_ij * h_i * (l_ij * l_ij) / (E123 * l_ik) + E3 * _kappa * (h_i * h_i) * l_ij * mi / (E123 * l_ik);
        eta_ik2 += -E1 * _kappa * eta_ij * h_i * (l_ij * l_ij * l_ij) / (E123 * (l_ik * l_ik)) - E1 * _kappa * eta_ij * h_j * (l_ij * l_ij) / (E123 * l_ik) - E1 * _kappa * eta_ik * h_i * (l_ij * l_ij) / (E123 * l_ik) - E1 * _kappa * (h_i * h_i) * (l_ij * l_ij) * mi / (E123 * (l_ik * l_ik)) + (0.5) * E12 * _kappa * (h_i * h_i * h_i) * h_j * l_ij / (E123 * (l_ik * l_ik * l_ik));
        eta_ik2 += -0.5 * E1 * _kappa * (h_i * h_i) * h_j * l_ij / (E123 * (l_ik * l_ik)) - E13 * _kappa * eta_ij * (h_i * h_i) * (l_ij * l_ij) / (E123 * (l_ik * l_ik)) - E13 * _kappa * eta_ik * (h_i * h_i) * l_ij / (E123 * l_ik) - E13 * _kappa * (h_i * h_i * h_i) * l_ij * mi / (E123 * (l_ik * l_ik)) - E13 * _kappa * (h_i * h_i) * h_j * mi / (E123 * l_ik);
        eta_ik2 += E12 * _kappa * eta_ij * h_i * h_j * (l_ij * l_ij) / (E123 * (l_ik * l_ik)) + E12 * _kappa * (h_i * h_i) * h_j * (l_ij * l_ij) * mj / (E123 * (l_ik * l_ik * l_ik)) + E12 * _kappa * (h_i * h_i) * h_j * l_ij * mi / (E123 * (l_ik * l_ik)) - 0.5 * E13 * _kappa * h_i * h_j * (l_ij * l_ij) / (E123 * (l_ik * l_ik)) + E3 * _kappa * h_i * h_j * l_ij * mj / (E123 * l_ik);
        eta_ik2 += -E1 * _kappa * h_i * h_j * (l_ij * l_ij) * mj / (E123 * (l_ik * l_ik)) - E1 * _kappa * h_i * h_j * l_ij * mi / (E123 * l_ik) - E13 * _kappa * eta_ij * h_i * h_j * l_ij / (E123 * l_ik) - E13 * _kappa * (h_i * h_i) * h_j * l_ij * mj / (E123 * (l_ik * l_ik));
    } else if (abs(h_i - h_j) <= 1e-6) {
        eta_ik2 = -3. * E1 / (-10. * E123 * l_ij + 30. * M_SQRT2 * FTilde12 * l_ij * sqrt_l_ij + 10. * M_SQRT2 * FTilde123 * h_i * sqrt_l_ij) + E123 / (-6. * E123 * (l_ij * l_ij) + 18. * M_SQRT2 * FTilde12 * (l_ij * l_ij) * sqrt_l_ij + 6. * M_SQRT2 * FTilde123 * h_i * l_ij * sqrt_l_ij) + 11. * E123 / (-60. * E123 * (l_ij * l_ij) + 180. * M_SQRT2 * FTilde12 * (l_ij * l_ij) * sqrt_l_ij + 60. * M_SQRT2 * FTilde123 * h_i * l_ij * sqrt_l_ij) - E123 / (-2. * E123 * l_ij + 6. * M_SQRT2 * FTilde12 * l_ij * sqrt_l_ij + 2. * M_SQRT2 * FTilde123 * h_i * sqrt_l_ij) + 41. * E123 / (-60. * E123 * l_ij + 180. * M_SQRT2 * FTilde12 * l_ij * sqrt_l_ij + 60. * M_SQRT2 * FTilde123 * h_i * sqrt_l_ij) - 11. * E123 / (-20. * E123 + 60. * M_SQRT2 * FTilde12 * sqrt_l_ij + 20. * M_SQRT2 * FTilde123 * h_i / sqrt_l_ij) + (0.75) / (l_ij * l_ij);
        eta_ik2 += -E * h_i / (-5. * E123 * l_ij + 15. * M_SQRT2 * FTilde12 * l_ij * sqrt_l_ij + 5. * M_SQRT2 * FTilde123 * h_i * sqrt_l_ij) + E1 * (h_i * h_i) / (-5. * E123 * (l_ij * l_ij) + 15. * M_SQRT2 * FTilde12 * (l_ij * l_ij) * sqrt_l_ij + 5. * M_SQRT2 * FTilde123 * h_i * l_ij * sqrt_l_ij) - E12 * (h_i * h_i * h_i) / (-10. * E123 * (l_ij * l_ij * l_ij) + 30. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij) * sqrt_l_ij + 10. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij) * sqrt_l_ij) + E12 * h_i / (-5. * E123 * (l_ij * l_ij) + 15. * M_SQRT2 * FTilde12 * (l_ij * l_ij) * sqrt_l_ij + 5. * M_SQRT2 * FTilde123 * h_i * l_ij * sqrt_l_ij) - E123 * (h_i * h_i * h_i * h_i) / (-20. * E123 * (l_ij * l_ij * l_ij * l_ij) + 60. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij * l_ij) * sqrt_l_ij + 20. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij * l_ij) * sqrt_l_ij) + E123 * (h_i * h_i) / (-6. * E123 * (l_ij * l_ij * l_ij) + 18. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij) * sqrt_l_ij + 6. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij) * sqrt_l_ij) - E123 * (h_i * h_i) / (-15. * E123 * (l_ij * l_ij) + 45. * M_SQRT2 * FTilde12 * (l_ij * l_ij) * sqrt_l_ij + 15. * M_SQRT2 * FTilde123 * h_i * l_ij * sqrt_l_ij);
        eta_ik2 += 3. * E12 * h_i / (-10. * E123 * l_ij + 30. * M_SQRT2 * FTilde12 * l_ij * sqrt_l_ij + 10. * M_SQRT2 * FTilde123 * h_i * sqrt_l_ij) + 17. * E123 * (h_i * h_i) / (-60. * E123 * (l_ij * l_ij * l_ij) + 180. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij) * sqrt_l_ij + 60. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij) * sqrt_l_ij) + M_SQRT2 * FTilde12 * (h_i * h_i * h_i * h_i) / (-4. * E123 * (l_ij * l_ij * l_ij) * sqrt_l_ij + 12. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij * l_ij) + 4. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij * l_ij)) - M_SQRT2 * FTilde12 / (-E123 * l_ij * sqrt_l_ij + 3. * M_SQRT2 * FTilde12 * (l_ij * l_ij) + M_SQRT2 * FTilde123 * h_i * l_ij) - M_SQRT2 * FTilde12 / (-2. * E123 * l_ij * sqrt_l_ij + 6. * M_SQRT2 * FTilde12 * (l_ij * l_ij) + 2. * M_SQRT2 * FTilde123 * h_i * l_ij) - M_SQRT2 * FTilde12 / (-E123 * sqrt_l_ij + 3. * M_SQRT2 * FTilde12 * l_ij + M_SQRT2 * FTilde123 * h_i) + M_SQRT2 * FTilde123 * h_i / (-4. * E123 * sqrt_l_ij + 12. * M_SQRT2 * FTilde12 * l_ij + 4. * M_SQRT2 * FTilde123 * h_i);
        eta_ik2 += -M_SQRT2 * FTilde12 * (h_i * h_i) / (-E123 * (l_ij * l_ij) * sqrt_l_ij + 3. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij) + M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij)) - M_SQRT2 * FTilde12 * (h_i * h_i) / (-2. * E123 * (l_ij * l_ij) * sqrt_l_ij + 6. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij) + 2. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij)) - M_SQRT2 * FTilde12 * (h_i * h_i) / (-2. * E123 * l_ij * sqrt_l_ij + 6. * M_SQRT2 * FTilde12 * (l_ij * l_ij) + 2. * M_SQRT2 * FTilde123 * h_i * l_ij) + M_SQRT2 * FTilde123 * (h_i * h_i * h_i * h_i * h_i) / (-20. * E123 * (l_ij * l_ij * l_ij * l_ij) * sqrt_l_ij + 60. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij * l_ij * l_ij) + 20. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij * l_ij * l_ij)) + M_SQRT2 * FTilde123 * (h_i * h_i * h_i) / (-6. * E123 * (l_ij * l_ij) * sqrt_l_ij + 18. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij) + 6. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij)) - M_SQRT2 * FTilde123 * h_i / (-E123 * l_ij * sqrt_l_ij + 3. * M_SQRT2 * FTilde12 * (l_ij * l_ij) + M_SQRT2 * FTilde123 * h_i * l_ij) + M_SQRT2 * FTilde123 * h_i / (-2. * E123 * l_ij * sqrt_l_ij + 6. * M_SQRT2 * FTilde12 * (l_ij * l_ij) + 2. * M_SQRT2 * FTilde123 * h_i * l_ij);
        eta_ik2 += 3. * M_SQRT2 * FTilde12 * sqrt_l_ij / (-2. * E123 * l_ij + 6. * M_SQRT2 * FTilde12 * l_ij * sqrt_l_ij + 2. * M_SQRT2 * FTilde123 * h_i * sqrt_l_ij) + 33. * M_SQRT2 * FTilde12 * sqrt_l_ij / (-20. * E123 + 60. * M_SQRT2 * FTilde12 * sqrt_l_ij + 20. * M_SQRT2 * FTilde123 * h_i / sqrt_l_ij) - M_SQRT2 * FTilde123 * (h_i * h_i * h_i) / (-3. * E123 * (l_ij * l_ij * l_ij) * sqrt_l_ij + 9. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij * l_ij) + 3. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij * l_ij)) - M_SQRT2 * FTilde123 * (h_i * h_i * h_i) / (-6. * E123 * (l_ij * l_ij * l_ij) * sqrt_l_ij + 18. * M_SQRT2 * FTilde12 * (l_ij * l_ij * l_ij * l_ij) + 6. * M_SQRT2 * FTilde123 * h_i * (l_ij * l_ij * l_ij));
    } else {
        eta_ik2 = -5.0 / 12.0 * (h_i * h_i) / (l_ik * l_ik) - 1.0 / 30.0 * (h_i * h_i) / (l_ik * l_ik * l_ik) - 5.0 / 12.0 * (l_ij * l_ij) / (l_ik * l_ik) - 1.0 / 30.0 * (l_ij * l_ij) / (l_ik * l_ik * l_ik) + 1. - (1.0 / 3.0) / l_ik + (0.75) / (l_ik * l_ik);
        eta_ik2 += (2.0 / 3.0) * E3 * _cF3 / l_ik + (0.5) * M_SQRT2 * F13 * _cF3 / sqrt_l_ik - 5.0 / 12.0 * h_i * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik) * sqrt_l_ij * sqrt_l_ik) - 5.0 / 12.0 * h_i * l_ij / (h_j * (l_ik * l_ik)) - 5.0 / 12.0 * l_ij * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i * sqrt_l_ik) - sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik) - 5.0 / 12.0 * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j * sqrt_l_ik);
        eta_ik2 += -0.075 * E1 * _cF3 * (l_ij * l_ij * l_ij) / (l_ik * l_ik * l_ik) - 2.0 / 3.0 * E1 * _cF3 * l_ij / l_ik - 0.075 * E13 * _cF3 * (h_i * h_i * h_i) / (l_ik * l_ik * l_ik) - 2.0 / 3.0 * E13 * _cF3 * h_i / l_ik - 0.375 * M_SQRT2 * F13 * _cF3 / (l_ik * sqrt_l_ik) - 0.15 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik * l_ik)) - 1.0 / 3.0 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik);
        eta_ik2 += -1.0 / 6.0 * E * _cF3 * h_j / l_ik - 0.125 * E1 * _cF3 * l_ij / (l_ik * l_ik) - 1.0 / 6.0 * E12 * _cF3 * h_j / l_ik - 0.125 * E13 * _cF3 * h_i / (l_ik * l_ik) + (1.0 / 3.0) * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik)) + (1.0 / 6.0) * h_i * h_j / (l_ij * l_ik) + (1.0 / 6.0) * h_j * l_ij / (h_i * l_ik);
        eta_ik2 += (0.05) * (h_i * h_i * h_i) * h_j / (l_ij * (l_ik * l_ik * l_ik)) + (1.0 / 60.0) * (h_i * h_i * h_i) * l_ij / (h_j * (l_ik * l_ik * l_ik)) + (1.0 / 15.0) * (h_i * h_i * h_i) * (l_ij * l_ij * l_ij) / ((h_j * h_j * h_j) * (l_ik * l_ik * l_ik)) + (1.0 / 60.0) * h_i * (l_ij * l_ij * l_ij) / (h_j * (l_ik * l_ik * l_ik)) + (2.0 / 3.0) * h_i * l_ij / (h_j * l_ik) + (1.0 / 15.0) * h_i * l_ij / (h_j * (l_ik * l_ik * l_ik)) + (0.05) * h_j * (l_ij * l_ij * l_ij) / (h_i * (l_ik * l_ik * l_ik));
        eta_ik2 += (5.0 / 24.0) * E3 * _cF3 * (h_i * h_i) / (l_ik * l_ik) + (5.0 / 24.0) * E3 * _cF3 * (l_ij * l_ij) / (l_ik * l_ik) + (0.5) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) / (l_ik * sqrt_l_ik) + (0.5) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) / (l_ik * sqrt_l_ik) + (0.3) * h_i * h_j * l_ij / (l_ik * l_ik * l_ik) + (5.0 / 12.0) * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j * sqrt_l_ik) + (0.75) * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik);
        eta_ik2 += -0.225 * E1 * _cF3 * (h_i * h_i) * l_ij / (l_ik * l_ik * l_ik) - 0.225 * E13 * _cF3 * h_i * (l_ij * l_ij) / (l_ik * l_ik * l_ik) - M_SQRT2 * F * _cF3 * l_ij / sqrt_l_ik - M_SQRT2 * F1 * _cF3 * h_j / sqrt_l_ik - 5.0 / 24.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) / ((l_ik * l_ik) * sqrt_l_ik) - 5.0 / 24.0 * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) / ((l_ik * l_ik) * sqrt_l_ik) - M_SQRT2 * FTilde3 * _cF3 * h_i / sqrt_l_ik;
        eta_ik2 += -0.1 * E12 * _cF3 * (h_i * h_i) * h_j / (l_ik * l_ik * l_ik) + (1.0 / 30.0) * E12 * _cF3 * h_i * l_ij / (l_ik * l_ik * l_ik) - 0.1 * E12 * _cF3 * h_j * (l_ij * l_ij) / (l_ik * l_ik * l_ik) + (0.75) * M_SQRT2 * F * _cF3 * l_ij / (l_ik * sqrt_l_ik) + (0.75) * M_SQRT2 * F1 * _cF3 * h_j / (l_ik * sqrt_l_ik) - 0.5 * M_SQRT2 * FTilde12 * _cF3 * l_ij / sqrt_l_ik - 0.5 * M_SQRT2 * FTilde123 * _cF3 * h_i / sqrt_l_ik;
        eta_ik2 += (5.0 / 12.0) * E * _cF3 * h_i * l_ij / (l_ik * l_ik) + (0.375) * E1 * _cF3 * h_i * h_j / (l_ik * l_ik) + (5.0 / 12.0) * E12 * _cF3 * h_i * l_ij / (l_ik * l_ik) + (0.375) * E13 * _cF3 * h_j * l_ij / (l_ik * l_ik) + (0.375) * M_SQRT2 * FTilde12 * _cF3 * l_ij / (l_ik * sqrt_l_ik) + (0.375) * M_SQRT2 * FTilde123 * _cF3 * h_i / (l_ik * sqrt_l_ik) + (0.75) * M_SQRT2 * FTilde3 * _cF3 * h_i / (l_ik * sqrt_l_ik);
        eta_ik2 += (0.5) * E1 * _cF3 * sqrt_h_j * sqrt_l_ij / (sqrt_h_i * sqrt_l_ik) + (0.5) * E13 * _cF3 * sqrt_h_i * sqrt_h_j / (sqrt_l_ij * sqrt_l_ik) + (0.5) * E3 * _cF3 * sqrt_h_i * sqrt_l_ij / (sqrt_h_j * sqrt_l_ik) + (0.5) * M_SQRT2 * F * _cF3 * h_i * h_j / (l_ik * sqrt_l_ik) + M_SQRT2 * F1 * _cF3 * h_i * l_ij / (l_ik * sqrt_l_ik) + (5.0 / 24.0) * M_SQRT2 * FTilde12 * _cF3 * l_ij / ((l_ik * l_ik) * sqrt_l_ik) + (5.0 / 24.0) * M_SQRT2 * FTilde123 * _cF3 * h_i / ((l_ik * l_ik) * sqrt_l_ik);
        eta_ik2 += -7.0 / 120.0 * E1 * _cF3 * h_i * (l_ij * l_ij) / (h_j * (l_ik * l_ik * l_ik)) - 7.0 / 120.0 * E13 * _cF3 * (h_i * h_i) * l_ij / (h_j * (l_ik * l_ik * l_ik)) - 13.0 / 24.0 * E3 * _cF3 * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) - 1.25 * M_SQRT2 * F1 * _cF3 * h_i * l_ij / ((l_ik * l_ik) * sqrt_l_ik) - 5.0 / 12.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * h_j / ((l_ik * l_ik) * sqrt_l_ik) - 5.0 / 12.0 * M_SQRT2 * FTilde123 * _cF3 * h_j * l_ij / ((l_ik * l_ik) * sqrt_l_ik) + (0.5) * M_SQRT2 * FTilde3 * _cF3 * h_j * l_ij / (l_ik * sqrt_l_ik);
        eta_ik2 += -1.0 / 3.0 * E * _cF3 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_l_ik) - 1.0 / 6.0 * E1 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) - 0.375 * E1 * _cF3 * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_l_ik) - 1.0 / 6.0 * E13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j * sqrt_l_ik) - 0.375 * E13 * _cF3 * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij * sqrt_l_ik) - 1.0 / 3.0 * E3 * _cF3 * h_i * l_ij / (h_j * l_ik) - 5.0 / 24.0 * E3 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j * sqrt_l_ik);
        eta_ik2 += -1.0 / 60.0 * E * _cF3 * (h_i * h_i) * (l_ij * l_ij) / (h_j * (l_ik * l_ik * l_ik)) - 1.0 / 30.0 * E3 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij * l_ij) / ((h_j * h_j * h_j) * (l_ik * l_ik * l_ik)) - 1.0 / 6.0 * E3 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik)) - 1.0 / 12.0 * E3 * _cF3 * h_i * h_j / (l_ij * l_ik) - 1.0 / 6.0 * E3 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij * sqrt_l_ik) - 1.0 / 6.0 * E3 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i * sqrt_l_ik) - 1.0 / 12.0 * E3 * _cF3 * h_j * l_ij / (h_i * l_ik);
        eta_ik2 += (1.0 / 6.0) * E1 * _cF3 * h_i * (l_ij * l_ij) / (h_j * (l_ik * l_ik)) + (0.125) * E1 * _cF3 * h_j * (l_ij * l_ij) / (h_i * (l_ik * l_ik)) - 1.0 / 60.0 * E12 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / (h_j * (l_ik * l_ik * l_ik)) + (1.0 / 6.0) * E13 * _cF3 * (h_i * h_i) * l_ij / (h_j * (l_ik * l_ik)) - 1.0 / 120.0 * E3 * _cF3 * (h_i * h_i * h_i) * l_ij / (h_j * (l_ik * l_ik * l_ik)) - 1.0 / 120.0 * E3 * _cF3 * h_i * (l_ij * l_ij * l_ij) / (h_j * (l_ik * l_ik * l_ik)) + (1.0 / 6.0) * E3 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j * sqrt_l_ik);
        eta_ik2 += (1.0 / 30.0) * E1 * _cF3 * (h_i * h_i) * (l_ij * l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik * l_ik)) + (5.0 / 24.0) * E1 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j * sqrt_l_ik) + (5.0 / 12.0) * E12 * _cF3 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik) * sqrt_l_ik) + (1.0 / 30.0) * E13 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik * l_ik)) + (0.125) * E13 * _cF3 * (h_i * h_i) * h_j / (l_ij * (l_ik * l_ik)) + (5.0 / 24.0) * E13 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j * sqrt_l_ik) + (0.075) * E3 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik * l_ik));
        eta_ik2 += (5.0 / 24.0) * E3 * _cF3 * h_i * l_ij / (h_j * (l_ik * l_ik)) - M_SQRT2 * F * _cF3 * h_i * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik) + M_SQRT2 * F * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) + (0.5) * M_SQRT2 * F1 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik * l_ik) + (0.5) * M_SQRT2 * F1 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik * l_ik) + (0.5) * M_SQRT2 * F1 * _cF3 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik) + M_SQRT2 * FTilde3 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j);
        eta_ik2 += -2. * M_SQRT2 * F1 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + 2. * M_SQRT2 * F1 * _cF3 * sqrt_h_i * sqrt_h_j * sqrt_l_ij / l_ik - 19.0 / 24.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik) - 13.0 / 120.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik * l_ik) - 19.0 / 24.0 * M_SQRT2 * FTilde123 * _cF3 * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik) - M_SQRT2 * F13 * _cF3 * h_i * l_ij / (h_j * sqrt_l_ik) - M_SQRT2 * FTilde3 * _cF3 * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik);
        eta_ik2 += -5.0 / 24.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij) / (h_j * (l_ik * l_ik) * sqrt_l_ik) - 13.0 / 120.0 * M_SQRT2 * FTilde123 * _cF3 * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik * l_ik) - 7.0 / 12.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) - 11.0 / 60.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik * l_ik) * sqrt_h_j) - 7.0 / 12.0 * M_SQRT2 * F13 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 7.0 / 12.0 * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) - 5.0 / 3.0 * M_SQRT2 * F13 * _cF3 * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j);
        eta_ik2 += -0.75 * M_SQRT2 * F * _cF3 * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i) - 0.5 * M_SQRT2 * F1 * _cF3 * h_i * h_j * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik) * sqrt_l_ij) - 0.5 * M_SQRT2 * F1 * _cF3 * h_j * l_ij * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i) - 5.0 / 24.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * l_ij / (h_j * (l_ik * l_ik) * sqrt_l_ik) - 5.0 / 24.0 * M_SQRT2 * F13 * _cF3 * h_i * l_ij / (h_j * (l_ik * l_ik) * sqrt_l_ik) - 0.75 * M_SQRT2 * F13 * _cF3 * h_j * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik) - 0.75 * M_SQRT2 * FTilde3 * _cF3 * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij);
        eta_ik2 += -1.0 / 3.0 * M_SQRT2 * F * _cF3 * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i) - 1.0 / 6.0 * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 1.0 / 6.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik) * sqrt_h_j) - 1.0 / 3.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * l_ik * sqrt_l_ik) - 0.5 * M_SQRT2 * F13 * _cF3 * h_i * h_j / (l_ij * sqrt_l_ik) - 0.5 * M_SQRT2 * F13 * _cF3 * h_j * l_ij / (h_i * sqrt_l_ik) - 1.0 / 3.0 * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik) * sqrt_l_ij);
        eta_ik2 += -0.125 * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i) - 1.0 / 30.0 * M_SQRT2 * FTilde12 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j) - 1.0 / 12.0 * M_SQRT2 * FTilde12 * _cF3 * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i) - 0.125 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik) * sqrt_l_ij) - 1.0 / 12.0 * M_SQRT2 * FTilde123 * _cF3 * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij) - 0.125 * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * h_j * sqrt_h_i * sqrt_h_j / (l_ij * (l_ik * l_ik) * sqrt_l_ij) - 0.125 * M_SQRT2 * F13 * _cF3 * h_j * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / (h_i * (l_ik * l_ik) * sqrt_h_i);
        eta_ik2 += -1.0 / 30.0 * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik * l_ik) * sqrt_h_j) - 0.025 * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_i) - 1.0 / 30.0 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik * l_ik) * sqrt_h_j) - 0.025 * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik * l_ik) * sqrt_l_ij) - 1.0 / 30.0 * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j) - 1.0 / 60.0 * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik * l_ik) * sqrt_h_j) - 1.0 / 60.0 * M_SQRT2 * F13 * _cF3 * h_i * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik * l_ik) * sqrt_h_j);
        eta_ik2 += (0.25) * M_SQRT2 * F * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j) + (0.25) * M_SQRT2 * F * _cF3 * h_j * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij) + (1.0 / 3.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j) * (l_ik * l_ik) * sqrt_h_j) + (0.25) * M_SQRT2 * F13 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik) * sqrt_l_ij) + (0.25) * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_i) + (0.25) * M_SQRT2 * FTilde3 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j) + (0.25) * M_SQRT2 * FTilde3 * _cF3 * h_j * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i);
        eta_ik2 += (1.0 / 6.0) * M_SQRT2 * F * _cF3 * h_j * (l_ij * l_ij) / (h_i * l_ik * sqrt_l_ik) + (1.0 / 6.0) * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij) / (h_j * l_ik * sqrt_l_ik) + (1.0 / 6.0) * M_SQRT2 * FTilde12 * _cF3 * h_j * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij) + (1.0 / 6.0) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * l_ij / (h_j * l_ik * sqrt_l_ik) + (1.0 / 6.0) * M_SQRT2 * FTilde123 * _cF3 * h_j * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i) + (0.125) * M_SQRT2 * F13 * _cF3 * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (1.0 / 6.0) * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i) * h_j / (l_ij * l_ik * sqrt_l_ik);
        eta_ik2 += (1.0 / 12.0) * M_SQRT2 * F * _cF3 * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j) + (1.0 / 12.0) * M_SQRT2 * F * _cF3 * h_j * l_ij * sqrt_h_j * sqrt_l_ij / (h_i * l_ik * sqrt_h_i) + (0.1) * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * h_j * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik * l_ik) * sqrt_l_ij) + (0.1) * M_SQRT2 * FTilde12 * _cF3 * h_j * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik * l_ik) + (0.1) * M_SQRT2 * FTilde123 * _cF3 * h_i * h_j * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik * l_ik) + (0.1) * M_SQRT2 * FTilde123 * _cF3 * h_j * (l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_i) + (1.0 / 12.0) * M_SQRT2 * FTilde3 * _cF3 * h_i * h_j * sqrt_h_i * sqrt_h_j / (l_ij * l_ik * sqrt_l_ij);
        eta_ik2 += (2.0 / 3.0) * M_SQRT2 * FTilde12 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) + (2.0 / 3.0) * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / (l_ik * sqrt_h_j) + (1.0 / 15.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((h_j * h_j * h_j) * (l_ik * l_ik * l_ik) * sqrt_h_j) + (1.0 / 30.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j) + (2.0 / 3.0) * M_SQRT2 * F13 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * l_ik * sqrt_h_j) + (1.0 / 30.0) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j) + (1.0 / 12.0) * M_SQRT2 * FTilde3 * _cF3 * (h_i * h_i * h_i) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j);
        eta_ik2 += (0.075) * M_SQRT2 * FTilde12 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik * l_ik) * sqrt_h_j) + (0.075) * M_SQRT2 * FTilde12 * _cF3 * (l_ij * l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j) + (0.075) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i * h_i) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j) + (0.075) * M_SQRT2 * FTilde123 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik * l_ik) * sqrt_h_j) + (0.375) * M_SQRT2 * F13 * _cF3 * h_i * h_j / (l_ij * l_ik * sqrt_l_ik) + (0.075) * M_SQRT2 * F13 * _cF3 * (l_ij * l_ij * l_ij) * sqrt_h_j * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_i) + (0.375) * M_SQRT2 * F13 * _cF3 * h_j * l_ij / (h_i * l_ik * sqrt_l_ik);
        eta_ik2 += (5.0 / 24.0) * M_SQRT2 * FTilde12 * _cF3 * l_ij * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (5.0 / 24.0) * M_SQRT2 * FTilde123 * _cF3 * h_i * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik) * sqrt_h_j) + (0.075) * M_SQRT2 * F13 * _cF3 * (h_i * h_i * h_i) * sqrt_h_i * sqrt_h_j / ((l_ik * l_ik * l_ik) * sqrt_l_ij) + (5.0 / 12.0) * M_SQRT2 * F13 * _cF3 * (h_i * h_i) * (l_ij * l_ij) / ((h_j * h_j) * (l_ik * l_ik) * sqrt_l_ik) + (5.0 / 6.0) * M_SQRT2 * F13 * _cF3 * h_i * sqrt_h_i * sqrt_h_j / (l_ik * sqrt_l_ij) + (1.25) * M_SQRT2 * F13 * _cF3 * h_i * l_ij / (h_j * l_ik * sqrt_l_ik) + (5.0 / 6.0) * M_SQRT2 * F13 * _cF3 * l_ij * sqrt_h_j * sqrt_l_ij / (l_ik * sqrt_h_i);
        eta_ik2 += (29.0 / 120.0) * M_SQRT2 * FTilde12 * _cF3 * (h_i * h_i) * l_ij * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j) + (29.0 / 120.0) * M_SQRT2 * FTilde123 * _cF3 * h_i * (l_ij * l_ij) * sqrt_h_i * sqrt_l_ij / ((l_ik * l_ik * l_ik) * sqrt_h_j) + (0.45) * M_SQRT2 * F13 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_h_j * sqrt_l_ij / (l_ik * l_ik * l_ik) + (7.0 / 120.0) * M_SQRT2 * F13 * _cF3 * h_i * l_ij * sqrt_h_i * sqrt_l_ij / (h_j * (l_ik * l_ik * l_ik) * sqrt_h_j);
    }
}

void Z3_symmetrical::calc_mjh2() {
    mjh2 = 1 + 2 * l_ij * mi / h_j - 2 * l_ij * mj_eta_ij / h_j - 2 * mj / h_j;
}

void Z3_symmetrical::calc_Q_star() {
    Q_star = -2 * eta_ij / l_ij + h_j * mi / l_ij - h_j * mj_eta_ij / l_ij;
}

void Z3_symmetrical::calc_Z3_norm() {
    Z3_norm = 16 * M_PI * M_PI * M_PI / sqrt(h_i * h_j * l_ij * l_ik) * cF3;
}

// =======================================================================================

void Z3_symmetrical::calc_from_coeffs() {
    calc_base();
    calc_mi();
    calc_mj();
    calc_eta_ij();
    calc_eta_ik();

    calc_mj_eta_ij();
    calc_mi_eta_ik();
    calc_mj_eta_ik();
    calc_eta_ik2();

    calc_mjh2();
    calc_Q_star();

    calc_Z3_norm();
}

int Z3_symmetrical::calc_from_moments(double hi0, double hj0, double lij0, double lik0, double eps, int max_steps) {
    int steps = 0;

    h_i  = hi0;
    h_j  = hj0;
    l_ij = lij0;
    l_ik = lik0;

    if (mi == mj && eta_ij == eta_ij) {
        h_j  = h_i;
        l_ik = l_ij;
    }

    double mi_ref = mi, mj_ref = mj, eta_ij_ref = eta_ij, eta_ik_ref = eta_ik;

    double delta_h_i = 1, delta_h_j = 1, delta_l_ij = 1, delta_l_ik = 1;
    while (delta_h_i * delta_h_i + delta_h_j * delta_h_j + delta_l_ij * delta_l_ij + delta_l_ik * delta_l_ik > eps * eps && steps < max_steps) {
        if (h_i <= 0 || h_j <= 0 || l_ij <= 0 || l_ik <= 0) break;

        calc_base();
        calc_mi();
        calc_mj();
        calc_eta_ij();
        calc_eta_ik();

        calc_mj_eta_ij();
        calc_mi_eta_ik();
        calc_mj_eta_ik();
        calc_eta_ik2();

        double mi_h_i  = eta_ik - 2. * (mi * mi) + 1. - 2. * mi / h_i + h_j * l_ij * mi / (h_i * h_i) - h_j * l_ij * mj_eta_ij / (h_i * h_i);
        double mi_h_j  = eta_ij - mi * mj - l_ij * mi / h_i + l_ij * mj_eta_ij / h_i;
        double mi_l_ij = -2. * eta_ij * mi + mj + mj_eta_ik - h_j * mi / h_i + h_j * mj_eta_ij / h_i;
        double mi_l_ik = -eta_ik * mi + mi_eta_ik;

        double mj_h_i  = 2. * eta_ij - 2. * mi * mj - 2. * l_ij * mi / h_i + 2. * l_ij * mj_eta_ij / h_i;
        double mj_h_j  = -(mj * mj) + 1. + 2. * l_ij * mi / h_j - 2. * l_ij * mj_eta_ij / h_j - 2. * mj / h_j;
        double mj_l_ij = -2. * eta_ij * mj + 2. * mj_eta_ij;
        double mj_l_ik = -eta_ik * mj + mj_eta_ik;

        double eta_ij_h_i  = -2. * eta_ij * mi + mj + mj_eta_ik - h_j * mi / h_i + h_j * mj_eta_ij / h_i;
        double eta_ij_h_j  = -eta_ij * mj + mj_eta_ij;
        double eta_ij_l_ij = -2. * (eta_ij * eta_ij) - 2. * eta_ij / l_ij + eta_ik + h_j * mi / l_ij - h_j * mj_eta_ij / l_ij + 1.;
        double eta_ij_l_ik = -eta_ij * eta_ik + eta_ij - 2. * eta_ik / l_ij - eta_ik2 * l_ik / l_ij + h_i * mi / l_ij - h_i * mi_eta_ik / l_ij + l_ik / l_ij;

        double eta_ik_h_i  = -2. * eta_ik * mi + 2. * mi_eta_ik;
        double eta_ik_h_j  = -eta_ik * mj + mj_eta_ik;
        double eta_ik_l_ij = -2. * eta_ij * eta_ik + 2. * eta_ij - 4. * eta_ik / l_ij - 2. * eta_ik2 * l_ik / l_ij + 2. * h_i * mi / l_ij - 2. * h_i * mi_eta_ik / l_ij + 2. * l_ik / l_ij;
        double eta_ik_l_ik = -(eta_ik * eta_ik) + eta_ik2;

        double D = mi_h_i * (mj_h_j * (eta_ij_l_ij * eta_ik_l_ik - eta_ij_l_ik * eta_ik_l_ij) - mj_l_ij * (eta_ij_h_j * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_j) + mj_l_ik * (eta_ij_h_j * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_j)) - mi_h_j * (mj_h_i * (eta_ij_l_ij * eta_ik_l_ik - eta_ij_l_ik * eta_ik_l_ij) - mj_l_ij * (eta_ij_h_i * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_i) + mj_l_ik * (eta_ij_h_i * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_i)) + mi_l_ij * (mj_h_i * (eta_ij_h_j * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_j) - mj_h_j * (eta_ij_h_i * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_i) + mj_l_ik * (eta_ij_h_i * eta_ik_h_j - eta_ij_h_j * eta_ik_h_i)) - mi_l_ik * (mj_h_i * (eta_ij_h_j * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_j) - mj_h_j * (eta_ij_h_i * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_i) + mj_l_ij * (eta_ij_h_i * eta_ik_h_j - eta_ij_h_j * eta_ik_h_i));
        if (D == 0) break;
        double _D = 1 / D;

        double x1 = mi - mi_ref, x2 = mj - mj_ref, x3 = eta_ij - eta_ij_ref, x4 = eta_ik - eta_ik_ref;

        delta_h_i  = _D * (-mi_h_j * (-mj_l_ij * (-eta_ij_l_ik * x4 + eta_ik_l_ik * x3) + mj_l_ik * (-eta_ij_l_ij * x4 + eta_ik_l_ij * x3) + x2 * (eta_ij_l_ij * eta_ik_l_ik - eta_ij_l_ik * eta_ik_l_ij)) + mi_l_ij * (-mj_h_j * (-eta_ij_l_ik * x4 + eta_ik_l_ik * x3) + mj_l_ik * (-eta_ij_h_j * x4 + eta_ik_h_j * x3) + x2 * (eta_ij_h_j * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_j)) - mi_l_ik * (-mj_h_j * (-eta_ij_l_ij * x4 + eta_ik_l_ij * x3) + mj_l_ij * (-eta_ij_h_j * x4 + eta_ik_h_j * x3) + x2 * (eta_ij_h_j * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_j)) + x1 * (mj_h_j * (eta_ij_l_ij * eta_ik_l_ik - eta_ij_l_ik * eta_ik_l_ij) - mj_l_ij * (eta_ij_h_j * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_j) + mj_l_ik * (eta_ij_h_j * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_j)));
        delta_h_j  = _D * (mi_h_i * (-mj_l_ij * (-eta_ij_l_ik * x4 + eta_ik_l_ik * x3) + mj_l_ik * (-eta_ij_l_ij * x4 + eta_ik_l_ij * x3) + x2 * (eta_ij_l_ij * eta_ik_l_ik - eta_ij_l_ik * eta_ik_l_ij)) + mi_l_ij * (mj_h_i * (-eta_ij_l_ik * x4 + eta_ik_l_ik * x3) + mj_l_ik * (eta_ij_h_i * x4 - eta_ik_h_i * x3) - x2 * (eta_ij_h_i * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_i)) - mi_l_ik * (mj_h_i * (-eta_ij_l_ij * x4 + eta_ik_l_ij * x3) + mj_l_ij * (eta_ij_h_i * x4 - eta_ik_h_i * x3) - x2 * (eta_ij_h_i * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_i)) - x1 * (mj_h_i * (eta_ij_l_ij * eta_ik_l_ik - eta_ij_l_ik * eta_ik_l_ij) - mj_l_ij * (eta_ij_h_i * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_i) + mj_l_ik * (eta_ij_h_i * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_i)));
        delta_l_ij = _D * (mi_h_i * (mj_h_j * (-eta_ij_l_ik * x4 + eta_ik_l_ik * x3) + mj_l_ik * (eta_ij_h_j * x4 - eta_ik_h_j * x3) - x2 * (eta_ij_h_j * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_j)) - mi_h_j * (mj_h_i * (-eta_ij_l_ik * x4 + eta_ik_l_ik * x3) + mj_l_ik * (eta_ij_h_i * x4 - eta_ik_h_i * x3) - x2 * (eta_ij_h_i * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_i)) - mi_l_ik * (mj_h_i * (eta_ij_h_j * x4 - eta_ik_h_j * x3) - mj_h_j * (eta_ij_h_i * x4 - eta_ik_h_i * x3) + x2 * (eta_ij_h_i * eta_ik_h_j - eta_ij_h_j * eta_ik_h_i)) + x1 * (mj_h_i * (eta_ij_h_j * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_j) - mj_h_j * (eta_ij_h_i * eta_ik_l_ik - eta_ij_l_ik * eta_ik_h_i) + mj_l_ik * (eta_ij_h_i * eta_ik_h_j - eta_ij_h_j * eta_ik_h_i)));
        delta_l_ik = _D * (mi_h_i * (mj_h_j * (eta_ij_l_ij * x4 - eta_ik_l_ij * x3) - mj_l_ij * (eta_ij_h_j * x4 - eta_ik_h_j * x3) + x2 * (eta_ij_h_j * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_j)) - mi_h_j * (mj_h_i * (eta_ij_l_ij * x4 - eta_ik_l_ij * x3) - mj_l_ij * (eta_ij_h_i * x4 - eta_ik_h_i * x3) + x2 * (eta_ij_h_i * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_i)) + mi_l_ij * (mj_h_i * (eta_ij_h_j * x4 - eta_ik_h_j * x3) - mj_h_j * (eta_ij_h_i * x4 - eta_ik_h_i * x3) + x2 * (eta_ij_h_i * eta_ik_h_j - eta_ij_h_j * eta_ik_h_i)) - x1 * (mj_h_i * (eta_ij_h_j * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_j) - mj_h_j * (eta_ij_h_i * eta_ik_l_ij - eta_ij_l_ij * eta_ik_h_i) + mj_l_ij * (eta_ij_h_i * eta_ik_h_j - eta_ij_h_j * eta_ik_h_i)));

        h_i -= delta_h_i;
        h_j -= delta_h_j;
        l_ij -= delta_l_ij;
        l_ik -= delta_l_ik;
        steps += 1;

        // std::cout << delta_h_i << ' ' << delta_h_j << ' ' << delta_l_ij << ' ' << delta_l_ik << '\n';
        // std::cout << h_i << ' ' << h_j << ' ' << l_ij << ' ' << l_ik << '\n';
    }

    if (h_i != h_i || h_j != h_j || l_ij != l_ij || l_ik != l_ik) h_i = h_j = l_ij = l_ik = NAN;
    if (delta_h_i * delta_h_i + delta_h_j * delta_h_j + delta_l_ij * delta_l_ij + delta_l_ik * delta_l_ik > eps * eps) h_i = h_j = l_ij = l_ik = NAN;

    calc_from_coeffs();

    return steps;
}
